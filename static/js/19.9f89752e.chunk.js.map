{"version":3,"sources":["route/manager/FoodManage.js"],"names":["Interface","styled","div","slideIn","keyframes","slideOut","CategoryBar","props","show","FoodSection","FoodList","FoodEdit","useParams","restaurant_id","category_id","food_id","imageRef","useRef","fileRef","history","useHistory","useState","foodName","foodNameSet","price","priceSet","cost","costSet","info","infoSet","status","statusSet","useAsync","promiseFn","apiFetcher","url","Auth","currentUser","uid","onResolve","result","name","data","error","handleChange","target","setter","value","event","a","preventDefault","parseFloat","alert","formData","FormData","current","files","length","append","option","method","body","message","push","className","ManagerStyle","form","onSubmit","placeholder","onChange","type","required","pattern","title","ref","reader","FileReader","onload","src","style","display","readAsDataURL","accept","img","alt","FoodListContainer","match","useRouteMatch","search","searchSet","reload","id","window","confirm","useEffect","to","icon","faPlus","filter","toLowerCase","map","key","numeral","format","faPen","onClick","handleDelete","faTrash","fontSize","color","marginTop","FoodAdd","FoodManageInterface","categoryShow","categoryShowSet","editCategory","editCategorySet","editingCategory","editingCategorySet","handleEditing","handleSave","json","faTimes","onDragEnd","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","index","destination","droppableId","provided","snapshot","droppableProps","innerRef","draggableId","draggableProps","dragHandleProps","userSelect","activeClassName","autoFocus","onBlur","maxLength","onKeyPress","category_title","faPencilAlt","faEllipsisV","path","component","FoodManage","param"],"mappings":"uyJA4BA,IAAMA,EAAYC,IAAOC,IAAV,KAkETC,EAAUC,YAAH,KASPC,EAAWD,YAAH,KASRE,EAAcL,IAAOC,IAAV,KAIF,SAACK,GAAD,OAAYA,EAAMC,KAAOL,EAAUE,KAsD5CI,EAAcR,IAAOC,IAAV,KAkCXQ,EAAWT,IAAOC,IAAV,KAgEd,SAASS,IAAY,IAAD,EAC8BC,cAAxCC,EADU,EACVA,cAAeC,EADL,EACKA,YAAaC,EADlB,EACkBA,QAC9BC,EAAWC,mBACXC,EAAUD,mBACVE,EAAUC,cAJE,EAKcC,mBAAS,IALvB,mBAKXC,EALW,KAKDC,EALC,OAMQF,mBAAS,IANjB,mBAMXG,EANW,KAMJC,EANI,OAOMJ,mBAAS,IAPf,mBAOXK,EAPW,KAOLC,EAPK,OAQMN,mBAAS,IARf,mBAQXO,EARW,KAQLC,EARK,OASUR,qBATV,mBASXS,EATW,KASHC,EATG,OAWMC,YAAS,CAC/BC,UAAWC,IACXC,IAAI,4BAAD,OAA8BpB,EAA9B,0BAAuDF,EAAvD,qBAAiFuB,IAAKC,YAAYC,KACrGC,UAH+B,YAGR,IAAXC,EAAU,EAAVA,OACVjB,EAAYiB,EAAOC,MACnBhB,EAASe,EAAOhB,OAChBG,EAAQa,EAAOd,MACfG,EAAQW,EAAOZ,SAPXc,EAXU,EAWVA,KAAMC,EAXI,EAWJA,MAWd,SAASC,EAAaC,EAAQC,GAC5BA,EAAOD,EAAOE,OAvBE,4CAqDlB,WAA4BC,GAA5B,iBAAAC,EAAA,yDACED,EAAME,mBAGJC,WAAW3B,IAAU2B,WAAWzB,IAChCyB,WAAW3B,IAAU,GACrB2B,WAAWzB,IAAS,GANxB,yCAQW0B,MAAM,gRARjB,cAUQC,EAAW,IAAIC,UACjB,UAAApC,EAAQqC,QAAQC,aAAhB,eAAuBC,QAAS,GAClCJ,EAASK,OAAO,QAASxC,EAAQqC,QAAQC,MAAM,IAZnD,SAcqBtB,YAAW,CAC5BC,IAAI,+BAAD,OAAiCpB,EAAjC,iBAAiDO,EAAjD,wBAAyER,EAAzE,kBAA8FU,EAA9F,qBAAgHY,IAAKC,YAAYC,IAAjI,0BAAsJzB,EAAtJ,iBAA4Ke,EAA5K,iBAAyLF,GAC5LiC,OAAQ,CACNC,OAAQ,OACRC,KAAMR,KAlBZ,OAsBuB,YAtBvB,OAsBWS,QACP3C,EAAQ4C,KACN,uBAAyBlD,EAAgB,kBAAoBC,GAG/DiB,EAAU,0BAAMiC,UAAU,SAAhB,yIA3Bd,4CArDkB,sBAoFlB,OAAIrB,IACkB,aAAd,OAAJD,QAAI,IAAJA,OAAA,EAAAA,EAAMoB,SAEN,0BAAME,UAAWC,IAAaC,KAAO,QAASC,SAvFhC,6CAwFZ,iIACA,wFACA,2BACEC,YAAY,yDACZrB,MAAOzB,EACP+C,SAnER,YACEzB,EADwC,EAAVC,OACTtB,IAmEf+C,KAAK,OACLC,UAAQ,IAEV,8FACA,2BACEH,YAAY,+DACZrB,MAAOrB,EACP2C,SA/DR,YACEzB,EADoC,EAAVC,OACLlB,IA+Df2C,KAAK,OACLC,UAAU,EACVC,QAAQ,gDACRC,MAAM,qMAER,4EACA,2BACEL,YAAY,6CACZrB,MAAOvB,EACP6C,SAjFR,YACEzB,EADqC,EAAVC,OACNpB,IAiFf6C,KAAK,OACLC,UAAU,EACVC,QAAQ,gDACRC,MAAM,qMAER,gHACA,8BACEL,YAAY,mDACZrB,MAAOnB,EACPyC,SAvFR,YACEzB,EADoC,EAAVC,OACLhB,IAuFf0C,UAAQ,IAEV,kFACA,2BAAOP,UAAU,YACf,2BACEM,KAAK,OACL7B,KAAK,QACLiC,IAAKxD,EACLmD,SAxFV,YAAkC,IAAXxB,EAAU,EAAVA,OACf8B,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAACrC,GACfxB,EAASuC,QAAQuB,IAAMtC,EAAOK,OAAOL,OACrCxB,EAASuC,QAAQwB,MAAQ,CAAEC,QAAS,UAGtCL,EAAOM,cAAcpC,EAAOW,MAAM,KAiF1B0B,OAAO,YAET,yBAAKJ,IAAKpC,EAAKF,OAAO2C,IAAKC,IAAI,OAAOV,IAAK1D,KAE7C,6BACCc,EACD,2BAAOwC,KAAK,SAASvB,MAAM,8EAG1B,WAGT,SAASsC,IACP,IAAMC,EAAQC,cADa,EAEY3E,cAA/BE,EAFmB,EAEnBA,YAAaD,EAFM,EAENA,cAFM,EAGCQ,mBAAS,IAHV,mBAGpBmE,EAHoB,KAGZC,EAHY,OAIKzD,YAAS,CACvCC,UAAWC,IACXC,IAAI,oDAAD,OAAsDtB,EAAtD,wBAAmFC,EAAnF,qBAA2GsB,IAAKC,YAAYC,OAFzHK,EAJmB,EAInBA,MAAOD,EAJY,EAIZA,KAAMgD,EAJM,EAINA,OAJM,4CAS3B,WAA4BC,GAA5B,SAAA1C,EAAA,0DACM2C,OAAOC,QAAQ,oGADrB,gCAEuB3D,YAAW,CAC5BC,IAAI,+BAAD,OAAiCwD,EAAjC,qBAAgDvD,IAAKC,YAAYC,IAAjE,0BAAsFzB,KAH/F,OAMyB,YANzB,OAMaiD,SACP4B,IAPN,4CAT2B,sBA6B3B,OAJAI,qBAAU,WACRJ,MACC,CAACA,EAAQ5E,EAAaD,IAErB8B,IACkB,aAAd,OAAJD,QAAI,IAAJA,OAAA,EAAAA,EAAMoB,SAEN,kBAACpD,EAAD,KACE,yBAAKsD,UAAU,UACb,8FACa,IACX,2BACEM,KAAK,OACLD,SAjBZ,YAAmC,IAAXxB,EAAU,EAAVA,OACtB4C,EAAU5C,EAAOE,QAiBPA,MAAOyC,EACPpB,YAAY,4DAGhB,kBAAC,IAAD,CAAM2B,GAAE,UAAKT,EAAMnD,IAAX,SACN,+BACE,kBAAC,IAAD,CAAiB6D,KAAMC,MADzB,mEAKHvD,EAAKF,OACJE,EAAKF,OACF0D,QAAO,SAACA,GAAD,OACLV,IAE+D,IAA5DU,EAAOzD,KAAK0D,cAAcX,OAAOA,EAAOW,kBAI7CC,KAAI,SAACA,GACJ,MAAO,CACL,yBAAKpC,UAAU,UAAUqC,IAAKD,EAAIT,IAChC,yBAAKb,IAAKsB,EAAIjB,IAAKC,IAAI,SACvB,8BACE,0BAAMpB,UAAU,UAAhB,0DACA,8BAAOoC,EAAI3D,OAEb,8BACE,0BAAMuB,UAAU,UAAhB,4BACA,8BAAOsC,IAAQF,EAAI5E,OAAO+E,OAAO,YAEnC,yBAAKvC,UAAU,aACb,kBAAC,IAAD,CAAM+B,GAAE,UAAKT,EAAMnD,IAAX,iBAAuBiE,EAAIT,KACjC,kBAAC,IAAD,CAAiBK,KAAMQ,OAEzB,kBAAC,IAAD,CACEC,QAAS,kBA3EF,2CA2EQC,CAAaN,EAAIT,KAChCK,KAAMW,YAOlB,0BAAM5B,MAAO,CAAE6B,SAAU,QAASC,MAAO,OAAQC,UAAW,KAA5D,mLAMD,WAGT,SAASC,IAAW,IAAD,EACsBnG,cAA/BC,EADS,EACTA,cAAeC,EADN,EACMA,YACjBE,EAAWC,mBACXC,EAAUD,mBACVE,EAAUC,cAJC,EAKeC,mBAAS,IALxB,mBAKVC,EALU,KAKAC,EALA,OAMSF,mBAAS,IANlB,mBAMVG,EANU,KAMHC,EANG,OAOOJ,mBAAS,IAPhB,mBAOVK,EAPU,KAOJC,EAPI,OAQON,mBAAS,IARhB,mBAQVO,EARU,KAQJC,EARI,OASWR,qBATX,mBASVS,EATU,KASFC,EATE,KAWjB,SAASa,EAAaC,EAAQC,GAC5BA,EAAOD,EAAOE,OAZC,4CA0CjB,WAA4BC,GAA5B,iBAAAC,EAAA,yDACED,EAAME,mBAGJC,WAAW3B,IAAU2B,WAAWzB,IAChCyB,WAAW3B,IAAU,GACrB2B,WAAWzB,IAAS,GANxB,yCAQW0B,MAAM,gRARjB,cAUQC,EAAW,IAAIC,UACjB,UAAApC,EAAQqC,QAAQC,aAAhB,eAAuBC,QAAS,GAClCJ,EAASK,OAAO,QAASxC,EAAQqC,QAAQC,MAAM,IAZnD,SAcqBtB,YAAW,CAC5BC,IAAI,iCAAD,OAAmCb,EAAnC,wBAA2DR,EAA3D,kBAAgFU,EAAhF,qBAAkGY,IAAKC,YAAYC,IAAnH,0BAAwIzB,EAAxI,iBAA8Je,EAA9J,iBAA2KF,GAC9KiC,OAAQ,CACNC,OAAQ,OACRC,KAAMR,KAlBZ,OAsBuB,YAtBvB,OAsBWS,QACP3C,EAAQ4C,KACN,uBAAyBlD,EAAgB,kBAAoBC,GAG/DiB,EAAU,0BAAMiC,UAAU,SAAhB,yIA3Bd,4CA1CiB,sBAyEjB,OACE,0BAAMA,UAAWC,IAAaC,KAAO,QAASC,SA1E/B,6CA2Eb,6FACA,wFACA,2BACEC,YAAY,yDACZrB,MAAOzB,EACP+C,SAjEN,YACEzB,EADwC,EAAVC,OACTtB,IAiEjB+C,KAAK,OACLC,UAAQ,IAEV,8FACA,2BACEH,YAAY,+DACZrB,MAAOrB,EACP2C,SAjEN,YACEzB,EADoC,EAAVC,OACLlB,IAiEjB2C,KAAK,OACLC,UAAU,EACVC,QAAQ,gDACRC,MAAM,qMAER,4EACA,2BACEL,YAAY,2BACZrB,MAAOvB,EACP6C,SA/EN,YACEzB,EADqC,EAAVC,OACNpB,IA+EjB6C,KAAK,OACLC,UAAU,EACVC,QAAQ,gDACRC,MAAM,qMAER,gHACA,8BACEL,YAAY,mDACZrB,MAAOnB,EACPyC,SAjFN,YACEzB,EADoC,EAAVC,OACLhB,IAiFjB0C,UAAQ,IAEV,kFACA,2BAAOP,UAAU,YACf,2BACEM,KAAK,OACL7B,KAAK,QACLiC,IAAKxD,EACLmD,SAtFR,YAAkC,IAAXxB,EAAU,EAAVA,OACf8B,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAACrC,GACfxB,EAASuC,QAAQuB,IAAMtC,EAAOK,OAAOL,OACrCxB,EAASuC,QAAQwB,MAAQ,CAAEC,QAAS,UAGtCL,EAAOM,cAAcpC,EAAOW,MAAM,KA+E5B0B,OAAO,YAET,yBAAKJ,IAAI,IAAIC,MAAO,CAAEC,QAAS,QAAUI,IAAI,OAAOV,IAAK1D,KAE3D,6BACCc,EACD,2BAAOwC,KAAK,SAASvB,MAAM,kEAKjC,SAASiE,IACP,IAAM1B,EAAQC,cADe,EAEWlE,oBAAS,GAFpB,mBAEtB4F,EAFsB,KAERC,EAFQ,OAGW7F,mBAAS,MAHpB,mBAGtB8F,EAHsB,KAGRC,EAHQ,OAIiB/F,mBAAS,MAJ1B,mBAItBgG,EAJsB,KAILC,EAJK,KAKrBzG,EAAkBD,cAAlBC,cALqB,EAMGmB,YAAS,CACvCC,UAAWC,IACXC,IAAI,4CAAD,OAA8CtB,EAA9C,qBAAwEuB,IAAKC,YAAYC,OAFtFI,EANqB,EAMrBA,KAAMC,EANe,EAMfA,MAAO+C,EANQ,EAMRA,OANQ,4CAW7B,sBAAAzC,EAAA,sEACqBf,YAAW,CAC5BC,IAAI,yCAAD,OAA2CC,IAAKC,YAAYC,IAA5D,0BAAiFzB,KAFxF,OAKuB,YALvB,OAKWiD,SACP4B,IANJ,4CAX6B,sBA0B7B,SAAS6B,EAAT,GAAoC,IAAX1E,EAAU,EAAVA,OACvByE,EAAmBzE,EAAOE,OA3BC,4CA8B7B,WAA4B4C,GAA5B,SAAA1C,EAAA,0DACc2C,OAAOC,QAAQ,sJAD7B,gCAGuB3D,YAAW,CAC5BC,IAAI,yCAAD,OAA2CC,IAAKC,YAAYC,IAA5D,0BAAiFzB,EAAjF,eAAqG8E,KAJ9G,OAOyB,YAPzB,OAOa7B,SACP4B,IARN,4CA9B6B,+BA2Cd8B,IA3Cc,2EA2C7B,4BAAAvE,EAAA,yDAC0B,KAApBoE,EADN,gCAEuBnF,YAAW,CAC5BC,IAAI,mCAAD,OAAqCgF,EAArC,2BAAoEE,EAApE,0BAAqGxG,EAArG,qBAA+HuB,IAAKC,YAAYC,OAHzJ,OAEUmF,EAFV,OAMIL,EAAgB,MAChBE,EAAmB,IAEE,YAAjBG,EAAK3D,SACP4B,IAVN,OAaE0B,EAAgB,MAChBE,EAAmB,IAdrB,4CA3C6B,sBA4E7B,OACE,kBAACtH,EAAD,KACE,kBAACM,EAAD,CAAa0D,UAAU,MAAMxD,KAAMyG,GACjC,yBAAKjD,UAAU,SACb,kFAAsB,IACtB,kBAAC,IAAD,CACEyC,QAAS,kBAAMS,GAAgB,IAC/BlB,KAAM0B,OAGV,yBAAK1D,UAAU,gBACb,kBAAC,IAAD,CAAiB2D,UA3BzB,SAAoBnF,IACL,uCAAG,WAAOoF,EAAMC,EAAYC,GAAzB,qBAAA7E,EAAA,6DACRT,EAASuF,MAAMC,KAAKJ,GADZ,EAEIpF,EAAOyF,OAAOJ,EAAY,GAF9B,mBAEPK,EAFO,KAGd1F,EAAOyF,OAAOH,EAAU,EAAGI,GAE3BxF,EAAKF,OAASA,EALA,SAORN,YAAW,CACfC,IAAI,4CAAD,OAA8CtB,EAA9C,qBAAwEuB,IAAKC,YAAYC,IAAzF,kBAAsGuF,EAAtG,gBAAwHC,KAR/G,2CAAH,0DAYbK,CAAQzF,EAAKF,OAAQA,EAAO4F,OAAOC,MAAO7F,EAAO8F,YAAYD,SAerD,kBAAC,IAAD,CAAWE,YAAY,aACpB,SAACC,EAAUC,GAAX,OACC,yCAASD,EAASE,eAAlB,CAAkChE,IAAK8D,EAASG,WAC3B,aAAd,OAAJjG,QAAI,IAAJA,OAAA,EAAAA,EAAMoB,UAAyBpB,EAAKF,OACjCE,EAAKF,OAAO4D,KAAI,SAACA,EAAKiC,GAAN,OACd,kBAAC,IAAD,CACEhC,IAAKD,EAAIT,GACTiD,YAAaxC,EAAIT,GACjB0C,MAAOA,IAEN,SAACG,EAAUC,GAAX,OACC,kBAAC,IAAD,iBACMD,EAASK,eACTL,EAASM,gBAFf,CAGEpE,IAAK8D,EAASG,SACd5D,MAAK,aACHgE,WAAY,QACTP,EAASK,eAAe9D,OAE7BiE,gBAAgB,WAChBhF,UAAU,8BACV+B,GAAE,UAAKT,EAAMnD,IAAX,YAAkBiE,EAAIT,MAEvBS,EAAIT,KAAOwB,EACV,2BACE7C,KAAK,OACL2E,WAAW,EACXlG,MAAOsE,EACPhD,SAAUkD,EACV2B,OAAQ1B,EACR2B,UAAW,GACXC,WAAY,YACE,UADW,EAAV/C,KACQmB,OAIzB,oCACE,8BAAOpB,EAAIiD,gBACX,0BAAMrF,UAAU,oBACd,kBAAC,IAAD,CACEyC,QAAS,kBA3GzBd,EA4G6BS,EAAIT,GA5G7B5C,EA4GiCqD,EAAIiD,eA3G3DjC,EAAgBzB,QAChB2B,EAAmBvE,GAFrB,IAAoB4C,EAAI5C,GA8GYiD,KAAMsD,MAER,kBAAC,IAAD,CACE7C,QAAS,kBAtIhB,2CAsIsBC,CAAaN,EAAIT,KAChCK,KAAM0B,eAStB/E,GAASA,EACZ6F,EAASpE,iBAKlB,yBAAKJ,UAAU,iBAAiByC,QAtJX,4CAsJrB,4GAKJ,kBAAChG,EAAD,KACE,yBAAKuD,UAAU,SACb,+BACE,kBAAC,IAAD,CACEgC,KAAMuD,IACN9C,QAAS,kBAAMS,GAAgB,MAC9B,IAJL,uEAQF,yBAAKlD,UAAU,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEwF,KAAI,UAAKlE,EAAMkE,KAAX,+BACJC,UAAW9I,IAEb,kBAAC,IAAD,CACE6I,KAAI,UAAKlE,EAAMkE,KAAX,qBACJC,UAAW1C,IAEb,kBAAC,IAAD,CACEyC,KAAI,UAAKlE,EAAMkE,KAAX,iBACJC,UAAWpE,IAEb,kBAAC,IAAD,CAAOmE,KAAI,UAAKlE,EAAMkE,OAAtB,wGAoBGE,UAZf,WACE,IAAMC,EAAQ/I,cADM,EAEIoB,YAAS,CAC/BC,UAAWC,IACXC,IAAI,4CAAD,OAA8CwH,EAAM9I,cAApD,qBAA8EuB,IAAKC,YAAYC,OAF5FI,EAFY,EAEZA,KAAMC,EAFM,EAENA,MAKd,OAAIA,IACAD,EAAa,kBAACsE,EAAD,MACV","file":"static/js/19.9f89752e.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useAsync } from \"react-async\";\nimport { Auth } from \"../../utils/firebase\";\nimport apiFetcher from \"../../utils/apiFetcher\";\nimport styled, { keyframes } from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport ManagerStyle from \"./Manager.module.css\";\nimport numeral from \"numeral\";\nimport {\n  faEllipsisV,\n  faPencilAlt,\n  faTimes,\n  faPlus,\n  faPen,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  useParams,\n  NavLink,\n  useRouteMatch,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nconst Interface = styled.div`\n  display: grid;\n  grid-template-columns: 25% 1fr;\n  grid-template-rows: 100%;\n  height: 100%;\n  border-radius: 3px;\n  border: 1px solid #232323;\n  font-size: 0.9em;\n  position: relative;\n  overflow: hidden;\n\n  .title {\n    background-color: #232323;\n    color: white;\n    text-align: center;\n    border-bottom: 1px solid #151515;\n    display: flex;\n    padding: 0px 10px 0px 10px;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .content {\n    padding: 10px;\n  }\n\n  .content input {\n    padding: 5px;\n  }\n\n  .lookup {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 10px;\n  }\n  .lookup input[type=\"text\"] {\n    border-radius: 3px;\n    border: 1px solid #232323;\n    width: 120px;\n  }\n  .lookup a:hover {\n    color: #707070;\n    cursor: pointer;\n  }\n\n  @media only screen and (min-width: 1000px) {\n    .title svg {\n      display: none;\n    }\n  }\n\n  @media only screen and (max-width: 1000px) {\n    .title {\n      justify-content: space-between;\n    }\n    & {\n      display: block;\n    }\n    .bar {\n      position: absolute;\n      width: 80%;\n      height: 100%;\n    }\n  }\n`;\n\nconst slideIn = keyframes`\n\tfrom {\n\t\tleft: -100%;\n\t}\n\tto {\n\t\tleft: 0;\n\t}\n`;\n\nconst slideOut = keyframes`\n\tfrom {\n\t\tleft: 0;\n\t}\n\tto {\n\t\tleft: -100%;\n\t}\n`;\n\nconst CategoryBar = styled.div`\n  background-color: #232323;\n  display: grid;\n  grid-template-rows: 50px calc(100% - 50px);\n  animation: ${(props) => (props.show ? slideIn : slideOut)} 0.5s forwards;\n  z-index: 1;\n\n  .CategoryList {\n    display: flex;\n    flex-direction: column;\n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n\n  .CategoryButton {\n    padding: 10px;\n    color: white;\n    border-bottom: 1px solid #151515;\n    font-size: 0.9em;\n    transition: all 0.3s;\n  }\n\n  .CategoryButton:hover,\n  .selected {\n    background-color: #505050;\n    cursor: pointer;\n    padding-left: 20px;\n    transition: all 0.3s;\n  }\n  .CategoryMenu {\n    display: grid;\n    grid-gap: 5px;\n    grid-template-columns: 1fr 50px;\n    align-items: center;\n  }\n  .CategoryMenu svg {\n    color: #888;\n    font-size: 0.9em;\n  }\n  .CategoryMenu span {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  .CategoryMenu > input {\n    padding: 5px;\n    width: 100%;\n    grid-column: 1 / 3;\n  }\n  .CategoryOperater {\n    display: flex;\n    justify-content: space-between;\n  }\n  .CategoryOperater > svg:hover {\n    color: white;\n  }\n`;\n\nconst FoodSection = styled.div`\n  background-color: white;\n  display: grid;\n  grid-template-rows: 50px calc(100% - 50px);\n  height: 100%;\n\n  .form {\n    height: 100%;\n    overflow-y: auto;\n    overflow-x: hidden;\n    padding: 10px;\n  }\n\n  .form textarea {\n    min-height: 80px !important;\n  }\n\n  .form img {\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n  }\n\n  .fileForm {\n    display: inline-grid;\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n    align-items: flex-start;\n    grid-gap: 10px;\n  }\n  .fileForm img {\n    background-color: #aaa;\n  }\n`;\n\nconst FoodList = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n  overflow-y: auto;\n  height: 100%;\n\n  .operation {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    font-size: 0.9em;\n    color: #555;\n  }\n  .operation svg {\n    margin: 5px;\n  }\n  .operation svg:hover {\n    color: #ddd;\n    cursor: pointer;\n  }\n\n  .foodBox {\n    position: relative;\n    border: 1px solid black;\n    display: grid;\n    grid-template-columns: 150px repeat(2, 1fr);\n    grid-gap: 5px;\n    grid-template-rows: 100px;\n    align-items: center;\n    justify-items: center;\n    border-radius: 3px;\n    margin-bottom: 10px;\n    z-index: 0;\n  }\n  .foodBox > img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n    background-color: #ddd;\n  }\n  .foodBox > span {\n    display: flex;\n    flex-direction: column;\n    font-weight: 600;\n  }\n  .header {\n    font-size: 0.85em;\n    font-weight: normal;\n  }\n\n  @media only screen and (max-width: 800px) {\n    .foodBox {\n      grid-template-columns: repeat(2, 1fr);\n      grid-template-rows: 100px;\n      align-items: start;\n      padding-bottom: 40px;\n    }\n    .foodBox img {\n      grid-column: 1 / 4;\n    }\n  }\n`;\n\nfunction FoodEdit() {\n  const { restaurant_id, category_id, food_id } = useParams();\n  const imageRef = useRef();\n  const fileRef = useRef();\n  const history = useHistory();\n  const [foodName, foodNameSet] = useState(\"\");\n  const [price, priceSet] = useState(\"\");\n  const [cost, costSet] = useState(\"\");\n  const [info, infoSet] = useState(\"\");\n  const [status, statusSet] = useState();\n\n  const { data, error } = useAsync({\n    promiseFn: apiFetcher,\n    url: `/manager/food/get.php?id=${food_id}&restaurant_id=${restaurant_id}&user_uid=${Auth.currentUser.uid}`,\n    onResolve({ result }) {\n      foodNameSet(result.name);\n      priceSet(result.price);\n      costSet(result.cost);\n      infoSet(result.info);\n    },\n  });\n\n  function handleChange(target, setter) {\n    setter(target.value);\n  }\n\n  function handleFoodNameChange({ target }) {\n    handleChange(target, foodNameSet);\n  }\n\n  function handlePriceChange({ target }) {\n    handleChange(target, priceSet);\n  }\n\n  function handleInfoChange({ target }) {\n    handleChange(target, infoSet);\n  }\n\n  function handleCostChange({ target }) {\n    handleChange(target, costSet);\n  }\n\n  function handleImage({ target }) {\n    const reader = new FileReader();\n\n    reader.onload = (result) => {\n      imageRef.current.src = result.target.result;\n      imageRef.current.style = { display: \"block\" };\n    };\n\n    reader.readAsDataURL(target.files[0]);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (\n      parseFloat(price) <= parseFloat(cost) ||\n      parseFloat(price) <= 0 ||\n      parseFloat(cost) <= 0\n    )\n      return alert(\"ราคากำไรต้องไม่น้อยกว่าราคาขาย และต้องมากกว่า 0\");\n\n    const formData = new FormData();\n    if (fileRef.current.files?.length > 0)\n      formData.append(\"image\", fileRef.current.files[0]);\n\n    const json = await apiFetcher({\n      url: `/manager/food/update.php?id=${food_id}&name=${foodName}&category_id=${category_id}&price=${price}&user_uid=${Auth.currentUser.uid}&restaurant_id=${restaurant_id}&info=${info}&cost=${cost}`,\n      option: {\n        method: \"POST\",\n        body: formData,\n      },\n    });\n\n    if (json.message === \"success\") {\n      history.push(\n        \"/manager/restaurant/\" + restaurant_id + \"/database/food/\" + category_id\n      );\n    } else {\n      statusSet(<span className=\"error\">มีปัญหาในการเพิ่มอาหาร</span>);\n    }\n  }\n\n  if (error) return error;\n  if (data?.message === \"success\")\n    return (\n      <form className={ManagerStyle.form + \" form\"} onSubmit={handleSubmit}>\n        <big>แก้ไขข้อมูลอาหาร</big>\n        <span>ชื่ออาหาร</span>\n        <input\n          placeholder=\"ชื่ออาหาร\"\n          value={foodName}\n          onChange={handleFoodNameChange}\n          type=\"text\"\n          required\n        />\n        <span>ราคาต้นทุน</span>\n        <input\n          placeholder=\"ราคาต้นทุน\"\n          value={cost}\n          onChange={handleCostChange}\n          type=\"text\"\n          required={true}\n          pattern=\"^(?=(\\D*\\d\\D*){0,9}$)-?\\d*(\\.\\d{0,2})?$\"\n          title=\"เฉพาะตัวเลขทศนิยมสองหลักเท่านั้น\"\n        />\n        <span>ราคาขาย</span>\n        <input\n          placeholder=\"ราคาขาย\"\n          value={price}\n          onChange={handlePriceChange}\n          type=\"text\"\n          required={true}\n          pattern=\"^(?=(\\D*\\d\\D*){0,9}$)-?\\d*(\\.\\d{0,2})?$\"\n          title=\"เฉพาะตัวเลขทศนิยมสองหลักเท่านั้น\"\n        />\n        <span>คำอธิบายอาหาร</span>\n        <textarea\n          placeholder=\"คำอธิบาย\"\n          value={info}\n          onChange={handleInfoChange}\n          required\n        />\n        <span>รูปอาหาร</span>\n        <label className=\"fileForm\">\n          <input\n            type=\"file\"\n            name=\"image\"\n            ref={fileRef}\n            onChange={handleImage}\n            accept=\"image/*\"\n          />\n          <img src={data.result.img} alt=\"food\" ref={imageRef} />\n        </label>\n        <br />\n        {status}\n        <input type=\"submit\" value=\"อัพเดธข้อมูล\" />\n      </form>\n    );\n  return \"Loading\";\n}\n\nfunction FoodListContainer() {\n  const match = useRouteMatch();\n  const { category_id, restaurant_id } = useParams();\n  const [search, searchSet] = useState(\"\");\n  const { error, data, reload } = useAsync({\n    promiseFn: apiFetcher,\n    url: `/manager/food/categorized_list.php?restaurant_id=${restaurant_id}&category_id=${category_id}&user_uid=${Auth.currentUser.uid}`,\n  });\n\n  async function handleDelete(id) {\n    if (window.confirm(\"ยืนยันการลบอาหาร\")) {\n      const json = await apiFetcher({\n        url: `/manager/food/delete.php?id=${id}&user_uid=${Auth.currentUser.uid}&restaurant_id=${restaurant_id}`,\n      });\n\n      if (json.message === \"success\") {\n        reload();\n      }\n    }\n  }\n\n  function handleSearch({ target }) {\n    searchSet(target.value);\n  }\n\n  useEffect(() => {\n    reload();\n  }, [reload, category_id, restaurant_id]);\n\n  if (error) return error;\n  if (data?.message === \"success\")\n    return (\n      <FoodList>\n        <div className=\"lookup\">\n          <label>\n            ค้นหาอาหาร{\" \"}\n            <input\n              type=\"text\"\n              onChange={handleSearch}\n              value={search}\n              placeholder=\"ชื่ออาหาร\"\n            />\n          </label>\n          <Link to={`${match.url}/add`}>\n            <label>\n              <FontAwesomeIcon icon={faPlus} /> เพิ่มอาหาร\n            </label>\n          </Link>\n        </div>\n        {data.result ? (\n          data.result\n            .filter((filter) =>\n              !search\n                ? true\n                : filter.name.toLowerCase().search(search.toLowerCase()) === -1\n                ? false\n                : true\n            )\n            .map((map) => {\n              return [\n                <div className=\"foodBox\" key={map.id}>\n                  <img src={map.img} alt=\"food\" />\n                  <span>\n                    <span className=\"header\">ชื่ออาหาร</span>\n                    <span>{map.name}</span>\n                  </span>\n                  <span>\n                    <span className=\"header\">ราคา</span>\n                    <span>{numeral(map.price).format(\"0,0.00\")}</span>\n                  </span>\n                  <div className=\"operation\">\n                    <Link to={`${match.url}/edit/${map.id}`}>\n                      <FontAwesomeIcon icon={faPen} />\n                    </Link>\n                    <FontAwesomeIcon\n                      onClick={() => handleDelete(map.id)}\n                      icon={faTrash}\n                    />\n                  </div>\n                </div>,\n              ];\n            })\n        ) : (\n          <span style={{ fontSize: \"0.8em\", color: \"#555\", marginTop: 10 }}>\n            ไม่มีรายการอาหารในหมวดหมู่นี้\n          </span>\n        )}\n      </FoodList>\n    );\n  return \"Loading\";\n}\n\nfunction FoodAdd() {\n  const { restaurant_id, category_id } = useParams();\n  const imageRef = useRef();\n  const fileRef = useRef();\n  const history = useHistory();\n  const [foodName, foodNameSet] = useState(\"\");\n  const [price, priceSet] = useState(\"\");\n  const [cost, costSet] = useState(\"\");\n  const [info, infoSet] = useState(\"\");\n  const [status, statusSet] = useState();\n\n  function handleChange(target, setter) {\n    setter(target.value);\n  }\n\n  function handleFoodNameChange({ target }) {\n    handleChange(target, foodNameSet);\n  }\n\n  function handlePriceChange({ target }) {\n    handleChange(target, priceSet);\n  }\n\n  function handleCostChange({ target }) {\n    handleChange(target, costSet);\n  }\n\n  function handleInfoChange({ target }) {\n    handleChange(target, infoSet);\n  }\n\n  function handleImage({ target }) {\n    const reader = new FileReader();\n\n    reader.onload = (result) => {\n      imageRef.current.src = result.target.result;\n      imageRef.current.style = { display: \"block\" };\n    };\n\n    reader.readAsDataURL(target.files[0]);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (\n      parseFloat(price) <= parseFloat(cost) ||\n      parseFloat(price) <= 0 ||\n      parseFloat(cost) <= 0\n    )\n      return alert(\"ราคากำไรต้องไม่น้อยกว่าราคาขาย และต้องมากกว่า 0\");\n\n    const formData = new FormData();\n    if (fileRef.current.files?.length > 0)\n      formData.append(\"image\", fileRef.current.files[0]);\n\n    const json = await apiFetcher({\n      url: `/manager/food/insert.php?name=${foodName}&category_id=${category_id}&price=${price}&user_uid=${Auth.currentUser.uid}&restaurant_id=${restaurant_id}&info=${info}&cost=${cost}`,\n      option: {\n        method: \"POST\",\n        body: formData,\n      },\n    });\n\n    if (json.message === \"success\") {\n      history.push(\n        \"/manager/restaurant/\" + restaurant_id + \"/database/food/\" + category_id\n      );\n    } else {\n      statusSet(<span className=\"error\">มีปัญหาในการเพิ่มอาหาร</span>);\n    }\n  }\n\n  return (\n    <form className={ManagerStyle.form + \" form\"} onSubmit={handleSubmit}>\n      <big>เพิ่มอาหาร</big>\n      <span>ชื่ออาหาร</span>\n      <input\n        placeholder=\"ชื่ออาหาร\"\n        value={foodName}\n        onChange={handleFoodNameChange}\n        type=\"text\"\n        required\n      />\n      <span>ราคาต้นทุน</span>\n      <input\n        placeholder=\"ราคาต้นทุน\"\n        value={cost}\n        onChange={handleCostChange}\n        type=\"text\"\n        required={true}\n        pattern=\"^(?=(\\D*\\d\\D*){0,9}$)-?\\d*(\\.\\d{0,2})?$\"\n        title=\"เฉพาะตัวเลขทศนิยมสองหลักเท่านั้น\"\n      />\n      <span>ราคาขาย</span>\n      <input\n        placeholder=\"ราคา\"\n        value={price}\n        onChange={handlePriceChange}\n        type=\"text\"\n        required={true}\n        pattern=\"^(?=(\\D*\\d\\D*){0,9}$)-?\\d*(\\.\\d{0,2})?$\"\n        title=\"เฉพาะตัวเลขทศนิยมสองหลักเท่านั้น\"\n      />\n      <span>คำอธิบายอาหาร</span>\n      <textarea\n        placeholder=\"คำอธิบาย\"\n        value={info}\n        onChange={handleInfoChange}\n        required\n      />\n      <span>รูปอาหาร</span>\n      <label className=\"fileForm\">\n        <input\n          type=\"file\"\n          name=\"image\"\n          ref={fileRef}\n          onChange={handleImage}\n          accept=\"image/*\"\n        />\n        <img src=\"#\" style={{ display: \"none\" }} alt=\"food\" ref={imageRef} />\n      </label>\n      <br />\n      {status}\n      <input type=\"submit\" value=\"เพิ่มอาหาร\" />\n    </form>\n  );\n}\n\nfunction FoodManageInterface() {\n  const match = useRouteMatch();\n  const [categoryShow, categoryShowSet] = useState(true);\n  const [editCategory, editCategorySet] = useState(null);\n  const [editingCategory, editingCategorySet] = useState(null);\n  const { restaurant_id } = useParams();\n  const { data, error, reload } = useAsync({\n    promiseFn: apiFetcher,\n    url: `/manager/category/list.php?restaurant_id=${restaurant_id}&user_uid=${Auth.currentUser.uid}`,\n  });\n\n  async function handleCreate() {\n    const json = await apiFetcher({\n      url: `/manager/category/insert.php?user_uid=${Auth.currentUser.uid}&restaurant_id=${restaurant_id}`,\n    });\n\n    if (json.message === \"success\") {\n      reload();\n    }\n  }\n\n  function handleEdit(id, value) {\n    editCategorySet(id);\n    editingCategorySet(value);\n  }\n\n  function handleEditing({ target }) {\n    editingCategorySet(target.value);\n  }\n\n  async function handleDelete(id) {\n    const con = window.confirm(\"ยืนยันการลบหมวดหมู่อาหาร ?\");\n    if (con) {\n      const json = await apiFetcher({\n        url: `/manager/category/delete.php?user_uid=${Auth.currentUser.uid}&restaurant_id=${restaurant_id}&id=${id}`,\n      });\n\n      if (json.message === \"success\") {\n        reload();\n      }\n    }\n  }\n\n  async function handleSave() {\n    if (editingCategory !== \"\") {\n      const json = await apiFetcher({\n        url: `/manager/category/update.php?id=${editCategory}&category_title=${editingCategory}&restaurant_id=${restaurant_id}&user_uid=${Auth.currentUser.uid}`,\n      });\n\n      editCategorySet(null);\n      editingCategorySet(\"\");\n\n      if (json.message === \"success\") {\n        reload();\n      }\n    }\n    editCategorySet(null);\n    editingCategorySet(\"\");\n  }\n\n  function handleSort(result) {\n    const reorder = async (list, startIndex, endIndex) => {\n      const result = Array.from(list);\n      const [removed] = result.splice(startIndex, 1);\n      result.splice(endIndex, 0, removed);\n\n      data.result = result;\n\n      await apiFetcher({\n        url: `/manager/category/sort.php?restaurant_id=${restaurant_id}&user_uid=${Auth.currentUser.uid}&start=${startIndex}&end=${endIndex}`,\n      });\n    };\n\n    reorder(data.result, result.source.index, result.destination.index);\n  }\n\n  return (\n    <Interface>\n      <CategoryBar className=\"bar\" show={categoryShow}>\n        <div className=\"title\">\n          <span>หมวดหมู่</span>{\" \"}\n          <FontAwesomeIcon\n            onClick={() => categoryShowSet(false)}\n            icon={faTimes}\n          />\n        </div>\n        <div className=\"CategoryList\">\n          <DragDropContext onDragEnd={handleSort}>\n            <Droppable droppableId=\"dropable\">\n              {(provided, snapshot) => (\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {data?.message === \"success\" && data.result\n                    ? data.result.map((map, index) => (\n                        <Draggable\n                          key={map.id}\n                          draggableId={map.id}\n                          index={index}\n                        >\n                          {(provided, snapshot) => (\n                            <NavLink\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              ref={provided.innerRef}\n                              style={{\n                                userSelect: \"none\",\n                                ...provided.draggableProps.style,\n                              }}\n                              activeClassName=\"selected\"\n                              className=\"CategoryMenu CategoryButton\"\n                              to={`${match.url}/${map.id}`}\n                            >\n                              {map.id === editCategory ? (\n                                <input\n                                  type=\"text\"\n                                  autoFocus={true}\n                                  value={editingCategory}\n                                  onChange={handleEditing}\n                                  onBlur={handleSave}\n                                  maxLength={30}\n                                  onKeyPress={({ key }) => {\n                                    if (key === \"Enter\") handleSave();\n                                  }}\n                                />\n                              ) : (\n                                <>\n                                  <span>{map.category_title}</span>\n                                  <span className=\"CategoryOperater\">\n                                    <FontAwesomeIcon\n                                      onClick={() =>\n                                        handleEdit(map.id, map.category_title)\n                                      }\n                                      icon={faPencilAlt}\n                                    />\n                                    <FontAwesomeIcon\n                                      onClick={() => handleDelete(map.id)}\n                                      icon={faTimes}\n                                    />\n                                  </span>\n                                </>\n                              )}\n                            </NavLink>\n                          )}\n                        </Draggable>\n                      ))\n                    : error && error}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n          <div className=\"CategoryButton\" onClick={handleCreate}>\n            สร้างหมวดหมู่ใหม่\n          </div>\n        </div>\n      </CategoryBar>\n      <FoodSection>\n        <div className=\"title\">\n          <label>\n            <FontAwesomeIcon\n              icon={faEllipsisV}\n              onClick={() => categoryShowSet(true)}\n            />{\" \"}\n            รายการอาหาร\n          </label>\n        </div>\n        <div className=\"content\">\n          <Switch>\n            <Route\n              path={`${match.path}/:category_id/edit/:food_id`}\n              component={FoodEdit}\n            />\n            <Route\n              path={`${match.path}/:category_id/add`}\n              component={FoodAdd}\n            />\n            <Route\n              path={`${match.path}/:category_id`}\n              component={FoodListContainer}\n            />\n            <Route path={`${match.path}`}>เลือกประเภทอาหาร</Route>\n          </Switch>\n        </div>\n      </FoodSection>\n    </Interface>\n  );\n}\n\nfunction FoodManage() {\n  const param = useParams();\n  const { data, error } = useAsync({\n    promiseFn: apiFetcher,\n    url: `/manager/category/list.php?restaurant_id=${param.restaurant_id}&user_uid=${Auth.currentUser.uid}`,\n  });\n\n  if (error) return error;\n  if (data) return <FoodManageInterface />;\n  return \"Loading\";\n}\n\nexport default FoodManage;\n"],"sourceRoot":""}