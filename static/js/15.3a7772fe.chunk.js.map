{"version":3,"sources":["route/restaurant/Cart.js","../node_modules/numeral/numeral.js"],"names":["CartContainer","styled","div","StatusLabel","span","TotalBar","FoodBlock","Danger","NoneText","Billed","button","props","disabled","Status","socket","status","id","reload","onClick","emit","FoodList","data","length","map","key","src","img","alt","className","name","numeral","price","format","quantity","parseInt","ModalStyled","BilledModal","BilledButton","danger","Modal","closeEmit","force","BillingModal","TotalPayment","BillingModalStyled","color","type","Cart","useAuthAPI","error","useState","modal","modalSet","forceSet","match","useRouteMatch","history","useHistory","useContext","Socket","connected","checkBill","push","url","useEffect","on","off","message","totalPrice","result","total","path","filter","define","_","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","options","Numeral","input","number","this","_input","_value","value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","regexps","unformat","stringToNumber","Number","version","obj","numberToFormat","roundingFunction","leadingCount","abbrForce","abs","int","precision","signed","thousands","output","locale","negP","optDec","abbr","decimal","neg","Math","includes","indexOf","RegExp","abbreviations","trillion","billion","million","thousand","toString","split","toFixed","delimiters","slice","String","i","string","abbreviation","stringOriginal","currency","symbol","pow","min","search","insert","subString","start","reduce","array","callback","TypeError","t","Object","len","k","arguments","multiplier","x","parts","correctionFactor","args","Array","prototype","call","accum","next","mn","maxDecimals","optionals","boundedPrecision","optionalsRegExp","power","splitValue","minDecimals","max","toLowerCase","localeData","Error","reset","property","register","validate","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","console","warn","trim","e","substr","fn","clone","inputString","formatFunction","round","set","add","corrFactor","curr","currI","O","subtract","multiply","divide","difference","ordinal","b","space","splice","join","base","suffixes","binary","unformatRegex","concat","item","bytes","suffix","bytesMultiplier","symbols","before","after","toExponential","hours","floor","minutes","seconds","timeArray"],"mappings":"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","file":"static/js/15.3a7772fe.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { useAuthAPI } from \"../../utils/apiFetcher\";\nimport Loader from \"../../utils/Loader\";\nimport styled from \"styled-components\";\nimport numeral from \"numeral\";\nimport { useRouteMatch, Switch, Route, useHistory } from \"react-router-dom\";\nimport { Socket } from \"./Restaurant\";\nimport { default as BillLoader } from \"react-loader-spinner\";\n\nconst CartContainer = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  height: calc(100% - 46px);\n  overflow: auto;\n`;\n\nconst StatusLabel = styled.span`\n  font-size: 1.4em;\n  margin-bottom: 10px;\n`;\n\nconst TotalBar = styled.div`\n  position: fixed;\n  bottom: 75px;\n  left: 0;\n  width: 100%;\n  padding: 10px;\n  color: white;\n  background-color: #454545;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst FoodBlock = styled.div`\n  display: flex;\n  font-size: 0.7em;\n  grid-gap: 8px;\n  margin-bottom: 10px;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .title {\n    font-size: 1.1em;\n  }\n  .price,\n  .quantity,\n  .status {\n    font-size: calc(1.5vh + 0.3vw + 3px);\n  }\n\n  img {\n    width: 150px;\n    max-width: 40vw;\n    height: 130px;\n    object-fit: cover;\n  }\n\n  @media only screen and (min-width: 1024px) {\n    img {\n      height: 180px;\n      width: 210px;\n    }\n  }\n`;\n\nconst Danger = styled.span`\n  color: red;\n  text-decoration: underline;\n`;\n\nconst NoneText = styled.span`\n  font-size: 0.7em;\n`;\n\nconst Billed = styled.button`\n  background-color: ${(props) => (props.disabled ? \"grey\" : \"green\")};\n  color: white;\n  padding: 4px 7px;\n  font-size: 0.8em;\n  border: none;\n  border-radius: 3px;\n  align-items: center;\n\n  ${({ disabled }) =>\n    !disabled &&\n    `&:hover {\n    background-color: #005900;\n    transition: all 0.2s;\n  }`}\n`;\n\nfunction Status({ socket, status, id, reload }) {\n  switch (status) {\n    case 0:\n      return (\n        <span>\n          รอการยืนยัน{\" \"}\n          <Danger onClick={() => socket.emit(\"cancel\", id)}>ยกเลิก</Danger>\n        </span>\n      );\n    case 1:\n      return \"กำลังทำ\";\n    case 2:\n      return \"เสิร์ฟแล้ว\";\n    case 3:\n      return \"ถูกยกเลิก\";\n    default:\n      return null;\n  }\n}\n\nfunction FoodList({ data, socket, reload }) {\n  const list =\n    data?.length > 0 ? (\n      data.map((map) => (\n        <FoodBlock key={map.id}>\n          <img src={map.img} alt=\"food\" />\n          <div>\n            <span className=\"title\">{map.name}</span>\n            <span className=\"price\">\n              ราคา {numeral(map.price).format(\"0,0.00\")} บาท\n            </span>\n            <span className=\"quantity\">จำนวน {map.quantity}</span>\n            <span className=\"status\">\n              <Status\n                socket={socket}\n                reload={reload}\n                status={parseInt(map.status)}\n                id={map.id}\n              />\n            </span>\n          </div>\n        </FoodBlock>\n      ))\n    ) : (\n      <NoneText>ไม่มีรายการ</NoneText>\n    );\n\n  return list;\n}\n\nconst ModalStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 2;\n\n  .background {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n\n  .modal {\n    padding: 10px;\n    border-radius: 3px;\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: 80%;\n    height: 40%;\n    background-color: white;\n  }\n`;\n\nconst BilledModal = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: space-between;\n\n  big {\n    margin-bottom: 10px;\n    font-size: calc(1.1em + 1px);\n    font-weight: bold;\n  }\n\n  & > span {\n    display: flex;\n    flex-direction: column;\n  }\n\n  & > div {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nconst BilledButton = styled.button`\n  width: 42%;\n  border: none;\n  border-radius: 3px;\n  color: white;\n  padding: 6px;\n  background-color: ${(props) => (props.danger ? \"red\" : \"green\")};\n\n  &:hover {\n    background-color: ${(props) => (props.danger ? \"#ab0000\" : \"#004a00\")};\n    transition: all 0.3s;\n  }\n\n  @media only screen and (min-width: 800px) {\n    & {\n      font-size: 0.7em;\n    }\n  }\n`;\n\nfunction Modal({ data, closeEmit, force }) {\n  return (\n    <ModalStyled>\n      <div\n        className=\"background\"\n        onClick={!force ? () => closeEmit() : null}\n      ></div>\n      <div className=\"modal\">{data}</div>\n    </ModalStyled>\n  );\n}\n\nconst BillingModal = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 100%;\n  position: relative;\n\n  svg {\n    color: #555;\n  }\n`;\n\nconst TotalPayment = styled.span`\n  font-size: 1.4em;\n  text-decoration: underline;\n`;\n\nfunction BillingModalStyled({ price }) {\n  return (\n    <BillingModal>\n      <TotalPayment>รวมสุทธิที่ต้องจ่าย</TotalPayment>\n      <span>{numeral(price).format(\"0,0.00\")} บาท</span>\n      <BillLoader color=\"#aaa\" type=\"ThreeDots\" />\n      <span>กรุณารอพนักงาน</span>\n    </BillingModal>\n  );\n}\n\nfunction Cart() {\n  const { data, error, reload } = useAuthAPI(`/restaurant/order/select.php`);\n  const [modal, modalSet] = useState();\n  const [force, forceSet] = useState(false);\n  const match = useRouteMatch();\n  const history = useHistory();\n\n  const { socket, connected } = useContext(Socket);\n\n  useEffect(() => {\n    socket.on(\"update\", reload);\n    socket.on(\"billing\", () => history.push(`${match.url}/billing`));\n    socket.on(\"cancelBill\", () => {\n      history.push(`${match.url}`);\n      modalSet();\n    });\n    return () => {\n      socket.off(\"update\");\n      socket.off(\"billing\");\n      socket.off(\"cancelBill\");\n    };\n  });\n\n  function checkBill() {\n    socket.emit(\"checkBill\");\n    forceSet(true);\n    history.push(`${match.url}/billing`);\n  }\n\n  if (error) return error;\n  if (data?.message === \"success\" && connected) {\n    const totalPrice = data.result?.length > 0 ? data.result[0].total : 0;\n\n    return (\n      <>\n        <Switch>\n          <Route path={`${match.path}/billing`}>\n            <Modal\n              data={<BillingModalStyled price={totalPrice} />}\n              closeEmit={modalSet}\n              force={force}\n            />\n          </Route>\n          <Route path={`${match.path}`}>\n            {modal && <Modal data={modal} closeEmit={modalSet} force={force} />}\n          </Route>\n        </Switch>\n        <CartContainer>\n          <StatusLabel>\n            อยู่ในกระบวนการ\n            <br />\n            <FoodList\n              socket={socket}\n              reload={reload}\n              data={data.result?.filter((filter) => filter.status < 2)}\n            />\n          </StatusLabel>\n          <StatusLabel>\n            เสิร์ฟแล้ว\n            <br />\n            <FoodList\n              data={data.result?.filter(\n                (filter) => parseInt(filter.status) === 2\n              )}\n            />\n          </StatusLabel>\n          <StatusLabel>\n            ยกเลิกแล้ว\n            <br />\n            <FoodList\n              data={data.result?.filter(\n                (filter) => parseInt(filter.status) === 3\n              )}\n            />\n          </StatusLabel>\n        </CartContainer>\n        <TotalBar>\n          <span>\n            รวมทั้งสิ้น {numeral(totalPrice).format(\"0,0.00\") + \" \"}\n            บาท\n          </span>\n          <Billed\n            disabled={data.result?.length === 0 || totalPrice <= 0}\n            onClick={() =>\n              modalSet(\n                <BilledModal>\n                  <span>\n                    <big>ยืนยันการส่งคำขอเรียกเก็บเงิน</big>\n                    <span>\n                      เมื่อยืนยันจะไม่สามารถสั่งอาหารเพิ่มได้อีก\n                      จากนั้นจะมีพนักงานมาดำเนินการชำระ กรุณาเตรียมเงินให้พร้อม\n                    </span>\n                  </span>\n                  <div>\n                    <BilledButton danger onClick={() => modalSet()}>\n                      ยกเลิก\n                    </BilledButton>\n                    <BilledButton onClick={checkBill}>ยืนยัน</BilledButton>\n                  </div>\n                </BilledModal>\n              )\n            }\n          >\n            เรียกเก็บเงิน\n          </Billed>\n        </TotalBar>\n      </>\n    );\n  }\n  return <Loader />;\n}\n\nexport default Cart;\n","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(this, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n"],"sourceRoot":""}