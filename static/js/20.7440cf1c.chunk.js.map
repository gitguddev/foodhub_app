{"version":3,"sources":["route/manager/OrderQueue.js"],"names":["statusMessage","OrderTableContainer","styled","div","OrderTable","table","OperateButton","FontAwesomeIcon","props","danger","OrderQueue","restaurant_id","useParams","useAsync","promiseFn","apiFetcher","url","Auth","currentUser","uid","data","error","reload","useContext","Socket","socket","connected","id","a","json","message","emit","console","useEffect","on","off","filteredData","result","length","filter","status","className","map","index","key","src","img","alt","name","quantity","restaurant_number","note","icon","faCheck","onClick","handleUpdate","faTimes","handleCancel","colSpan"],"mappings":"m7CAUA,IAAMA,EAAgB,CACpB,mGACA,yGACA,+DACA,gEAGIC,EAAsBC,IAAOC,IAAV,KAOnBC,EAAaF,IAAOG,MAAV,KAgDVC,EAAgBJ,YAAOK,IAAPL,CAAH,KACR,SAACM,GAAD,OAAYA,EAAMC,OAAS,MAAQ,WAqH/BC,UA5Gf,WAAuB,IACbC,EAAkBC,cAAlBD,cADY,EAEYE,YAAS,CACvCC,UAAWC,IACXC,IAAI,2CAAD,OAA6CL,EAA7C,qBAAuEM,IAAKC,YAAYC,OAFrFC,EAFY,EAEZA,KAAMC,EAFM,EAENA,MAAOC,EAFD,EAECA,OAFD,EAMUC,qBAAWC,UAAjCC,EANY,EAMZA,OAAQC,EANI,EAMJA,UANI,4CAmBpB,WAA4BC,GAA5B,eAAAC,EAAA,sEACqBb,YAAW,CAC5BC,IAAI,2CAAD,OAA6CL,EAA7C,qBAAuEM,IAAKC,YAAYC,IAAxF,eAAkGQ,KAFzG,OAKuB,aAJfE,EADR,QAKWC,SACPL,EAAOM,KAAK,UACZT,KAEAU,QAAQX,MAAMQ,EAAKC,SATvB,4CAnBoB,kEA+BpB,WAA4BH,GAA5B,eAAAC,EAAA,sEACqBb,YAAW,CAC5BC,IAAI,2CAAD,OAA6CL,EAA7C,qBAAuEM,IAAKC,YAAYC,IAAxF,eAAkGQ,KAFzG,OAKuB,aAJfE,EADR,QAKWC,SACPL,EAAOM,KAAK,UACZT,KAEAU,QAAQX,MAAMQ,EAAKC,SATvB,4CA/BoB,sBA4CpB,GApCAG,qBAAU,WAIR,OAHAR,EAAOS,GAAG,SAAUZ,GACpBG,EAAOS,GAAG,QAASZ,GACnBG,EAAOS,GAAG,SAAUZ,GACb,WACLG,EAAOU,IAAI,SACXV,EAAOU,IAAI,UACXV,EAAOU,IAAI,aAEZ,CAACxB,EAAec,EAAQH,IA2BvBD,EAAO,OAAOA,EAClB,GAAsB,aAAd,OAAJD,QAAI,IAAJA,OAAA,EAAAA,EAAMU,UAAyBJ,EAAW,CAAC,IAAD,EACtCU,GACJ,UAAAhB,EAAKiB,cAAL,eAAaC,QAAS,EAClBlB,EAAKiB,OAAOE,QAAO,SAACA,GAAD,OAAYA,EAAOC,OAAS,KAC/C,GAEN,OACE,kBAACvC,EAAD,KACE,kBAACG,EAAD,KACE,+BACE,4BACE,wBAAIqC,UAAU,aAAd,oDACA,sFACA,8DACA,wDACA,gFACA,gEAGJ,+BACGL,EAAaE,OAAS,EACrBF,EAAaM,KAAI,SAACA,EAAKC,GAAN,OACf,wBAAIC,IAAKF,EAAIf,IACX,wBAAIc,UAAU,aACZ,yBAAKA,UAAU,YAAYI,IAAKH,EAAII,IAAKC,IAAI,UAE/C,4BAAKL,EAAIM,MACT,4BAAKN,EAAIO,UACT,4BAAKP,EAAIQ,mBACT,4BAAKR,EAAIS,MAAQ,KACjB,4BACE,8BAAOnD,EAAc0C,EAAIF,SACzB,yBAAKC,UAAU,kBACZC,EAAIF,QAAU,GAAKE,EAAIF,OAAS,GAC/B,kBAAClC,EAAD,CACE8C,KAAMC,IACNC,QAAS,kBAjFb,2CAiFmBC,CAAab,EAAIf,OAGnCe,EAAIF,QAAU,GACb,kBAAClC,EAAD,CACE8C,KAAMI,IACNF,QAAS,kBAvFb,2CAuFmBG,CAAaf,EAAIf,KAChClB,OAAO,eAQnB,4BACE,wBAAIiD,QAAS,GAAb,kJAQd,MAAO","file":"static/js/20.7440cf1c.chunk.js","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { useAsync } from \"react-async\";\nimport apiFetcher from \"../../utils/apiFetcher\";\nimport { Auth } from \"../../utils/firebase\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { Socket } from \"./Manager\";\n\nconst statusMessage = [\n  \"กำลังรอการยืนยัน\",\n  \"อยู่ในกระบวนการทำ\",\n  \"เสิร์ฟแล้ว\",\n  \"ยกเลิกแล้ว\",\n];\n\nconst OrderTableContainer = styled.div`\n  overflow-y: auto;\n  overflow-x: hidden;\n  border-radius: 5px;\n  border: 1px solid #232323;\n`;\n\nconst OrderTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 0.85em;\n  border-radius: 3px;\n  box-sizing: border-box;\n\n  th {\n    background-color: #232323;\n    color: white;\n  }\n  td {\n    border-bottom: 1px solid #232323;\n  }\n  td,\n  th {\n    text-align: center;\n    padding: 5px;\n    width: calc(100% / 6) !important;\n    overflow: hidden;\n  }\n  .foodImage {\n    width: 100px;\n    height: 80px;\n    object-fit: cover;\n    background-color: #ccc;\n    border-radius: 3px;\n  }\n  .statusOperator {\n    margin-top: 10px;\n    display: flex;\n    justify-content: center;\n  }\n  .statusOperator > svg {\n    margin: 0px 10px;\n  }\n\n  @media only screen and (max-width: 800px) {\n    .imageCell {\n      display: none;\n    }\n    td,\n    th {\n      width: calc(100% / 5) !important;\n    }\n  }\n`;\n\nconst OperateButton = styled(FontAwesomeIcon)`\n  color: ${(props) => (props.danger ? \"red\" : \"green\")};\n\n  &:hover {\n    opacity: 0.3;\n    cursor: pointer;\n    transition: all 0.1s;\n  }\n`;\n\nfunction OrderQueue() {\n  const { restaurant_id } = useParams();\n  const { data, error, reload } = useAsync({\n    promiseFn: apiFetcher,\n    url: `/manager/order/select.php?restaurant_id=${restaurant_id}&user_uid=${Auth.currentUser.uid}`,\n  });\n  const { socket, connected } = useContext(Socket);\n\n  useEffect(() => {\n    socket.on(\"cancel\", reload);\n    socket.on(\"order\", reload);\n    socket.on(\"update\", reload);\n    return () => {\n      socket.off(\"order\");\n      socket.off(\"cancel\");\n      socket.off(\"update\");\n    };\n  }, [restaurant_id, socket, reload]);\n\n  async function handleCancel(id) {\n    const json = await apiFetcher({\n      url: `/manager/order/cancel.php?restaurant_id=${restaurant_id}&user_uid=${Auth.currentUser.uid}&id=${id}`,\n    });\n\n    if (json.message === \"success\") {\n      socket.emit(\"update\");\n      reload();\n    } else {\n      console.error(json.message);\n    }\n  }\n  async function handleUpdate(id) {\n    const json = await apiFetcher({\n      url: `/manager/order/update.php?restaurant_id=${restaurant_id}&user_uid=${Auth.currentUser.uid}&id=${id}`,\n    });\n\n    if (json.message === \"success\") {\n      socket.emit(\"update\");\n      reload();\n    } else {\n      console.error(json.message);\n    }\n  }\n\n  if (error) return error;\n  if (data?.message === \"success\" && connected) {\n    const filteredData =\n      data.result?.length > 0\n        ? data.result.filter((filter) => filter.status < 2)\n        : [];\n\n    return (\n      <OrderTableContainer>\n        <OrderTable>\n          <thead>\n            <tr>\n              <th className=\"imageCell\">รูปอาหาร</th>\n              <th>ชื่ออาหาร</th>\n              <th>จำนวน</th>\n              <th>โต๊ะ</th>\n              <th>หมายเหตุ</th>\n              <th>สถานะ</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredData.length > 0 ? (\n              filteredData.map((map, index) => (\n                <tr key={map.id}>\n                  <td className=\"imageCell\">\n                    <img className=\"foodImage\" src={map.img} alt=\"food\" />\n                  </td>\n                  <td>{map.name}</td>\n                  <td>{map.quantity}</td>\n                  <td>{map.restaurant_number}</td>\n                  <td>{map.note || \"-\"}</td>\n                  <td>\n                    <span>{statusMessage[map.status]}</span>\n                    <div className=\"statusOperator\">\n                      {map.status >= 0 && map.status < 2 && (\n                        <OperateButton\n                          icon={faCheck}\n                          onClick={() => handleUpdate(map.id)}\n                        />\n                      )}\n                      {map.status <= 0 && (\n                        <OperateButton\n                          icon={faTimes}\n                          onClick={() => handleCancel(map.id)}\n                          danger=\"true\"\n                        />\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={6}>ไม่มีคำสั่งซื้อในขณะนี้</td>\n              </tr>\n            )}\n          </tbody>\n        </OrderTable>\n      </OrderTableContainer>\n    );\n  }\n  return \"Loading\";\n}\n\nexport default OrderQueue;\n"],"sourceRoot":""}