{"version":3,"sources":["route/manager/RestaurantManage.js"],"names":["restaurant_id","table_quantity","downloadBlob","downloadURL","a","data","fileName","document","createElement","href","target","click","remove","mimeType","blob","Blob","type","url","window","URL","createObjectURL","setTimeout","revokeObjectURL","PDFDocument","create","pdf","registerFontkit","fontkit","Promise","all","then","font","default","fetch","res","arrayBuffer","embedFont","image","embedJpg","kanitFont","background","i","currentPage","addPage","getSize","height","width","QRCode","toDataURL","PROTOCOL","SERVER_ADDRESS","PORT","info","infoWidth","widthOfTextAtSize","drawImage","x","y","drawText","size","color","rgb","moveTo","embedPng","imageDim","save","savedPDF","RestaurantManage","param","useParams","history","useHistory","imageRef","useRef","coverRef","useState","restaurantName","restaurantNameUpdate","description","descriptionUpdate","tableQuantity","tableQuantityUpdate","imageSrc","imageSrcUpdate","status","setStatus","useAsync","promiseFn","apiFetcher","Auth","currentUser","uid","onResolve","result","name","img","error","handleDelete","prompt","message","push","className","ManagerStyle","event","preventDefault","formData","FormData","current","files","length","append","option","method","body","success","form","onSubmit","placeholder","value","onChange","required","rows","maxLength","min","max","onClick","QRCodePrint","icon","faQrcode","ref","src","alt","style","objectFit","border","marginBottom","reader","FileReader","onload","readAsDataURL","accept","danger"],"mappings":"yTAaA,WAA2BA,EAAeC,GAA1C,cAaWC,EASAC,EAtBX,6BAAAC,EAAA,6DAsBWD,EAtBX,SAsBuBE,EAAMC,GACzB,IAAMF,EAAIG,SAASC,cAAc,KACjCJ,EAAEK,KAAOJ,EACTD,EAAEM,OAAS,SACXN,EAAEO,QACFP,EAAEQ,UAdKV,EAbX,SAawBG,EAAMC,EAAUO,GACpC,IAAIC,EAAO,IAAIC,KAAK,CAACV,GAAO,CAC1BW,KAAMH,IAEJI,EAAMC,OAAOC,IAAIC,gBAAgBN,GACrCX,EAAYc,GACZI,YAAW,kBAAMH,OAAOC,IAAIG,gBAAgBL,KAAM,MAnBtD,SACoBM,cAAYC,SADhC,cACQC,EADR,QAEMC,gBAAgBC,KAFtB,SAIwCC,QAAQC,IAAI,CAChD,mCAAwCC,KAAxC,uCAA6C,6BAAA1B,EAAA,6DAAkB2B,EAAlB,EAASC,QAAT,KAC3CP,EAD2C,SACvBQ,MAAMF,GAAMD,MAAK,SAACI,GAAD,OAASA,EAAIC,iBADP,iDACvCC,UADuC,4DAA7C,uDAGA,mCAA+BN,KAA/B,uCAAoC,6BAAA1B,EAAA,6DAAkBiC,EAAlB,EAASL,QAAT,KAClCP,EADkC,SACfQ,MAAMI,GAAOP,MAAK,SAACI,GAAD,OAASA,EAAIC,iBADhB,iDAC9BG,SAD8B,4DAApC,yDARJ,mCAISC,EAJT,KAIoBC,EAJpB,KA8BWC,EAAI,EA9Bf,aA8BkBA,GAAKxC,GA9BvB,wBA+BUyC,EAAcjB,EAAIkB,UA/B5B,EAgC8BD,EAAYE,UAA9BC,EAhCZ,EAgCYA,OAAQC,EAhCpB,EAgCoBA,MAhCpB,UAiCsBC,IAAOC,UAAP,UACbC,IADa,cACCC,IADD,YACmBC,IADnB,4BAC2CnD,EAD3C,YAC4DyC,GAC5E,CACEK,MAAOA,EAAQ,IApCvB,eAiCU7B,EAjCV,OAwCUmC,EAAO,6CAAYX,EACR,GACXY,EAAYd,EAAUe,kBAAkBF,EAD7B,IAGjBV,EAAYa,UAAUf,EAAY,CAChCgB,EAAG,EACHC,EAAG,EACHX,QACAD,WAGFH,EAAYgB,SAASN,EAAM,CACzBI,EAAGV,EAAQ,EAAIO,EAAY,EAAI,GAC/BI,EAAG,GACHE,KAbe,GAcf5B,KAAMQ,EACNqB,MAAOC,cAAI,EAAG,EAAG,KAGnBnB,EAAYoB,OAAOhB,EAAQ,EAAGD,EAAS,GA3D3C,UA6DwBpB,EAAIsC,SAAS9C,GA7DrC,QA6DUoB,EA7DV,OA8DU2B,EAAW3B,EAEjBK,EAAYa,UAAUlB,EAAO,CAC3BmB,EAAGV,EAAQ,EAAIkB,EAASlB,MAAQ,EAChCW,EAAGZ,EAAS,EAAImB,EAASnB,OAAS,EAClCC,MAAOkB,EAASlB,MAChBD,OAAQmB,EAASnB,SApEvB,QA8BuCJ,IA9BvC,wBAwEEhB,EACGwC,OACAnC,MAAK,SAACoC,GAAD,OACJhE,EAAagE,EAAU,aAAc,sBA3E3C,6C,sBAoPeC,UArKf,WACE,IAAMC,EAAQC,cACRC,EAAUC,cAEVC,EAAWC,mBACXC,EAAWD,mBALS,EAOqBE,mBAAS,IAP9B,mBAOnBC,EAPmB,KAOHC,EAPG,OAQeF,mBAAS,IARxB,mBAQnBG,EARmB,KAQNC,EARM,OASmBJ,mBAAS,GAT5B,mBASnBK,EATmB,KASJC,EATI,OAUSN,mBAAS,IAVlB,mBAUnBO,EAVmB,KAUTC,EAVS,OAWER,qBAXF,mBAWnBS,EAXmB,KAWXC,EAXW,OAaFC,YAAS,CAC/BC,UAAWC,IACXvE,IAAI,kCAAD,OAAoCmD,EAAMpE,cAA1C,qBAAoEyF,IAAKC,YAAYC,KACxFC,UAH+B,YAGR,IAAXC,EAAU,EAAVA,OACVhB,EAAqBgB,EAAOC,MAC5Bf,EAAkBc,EAAOzC,MACzB6B,EAAoBY,EAAO5F,gBAC3BkF,EAAeU,EAAOE,QAPlBC,EAbkB,EAalBA,MAAO3F,EAbW,EAaXA,KAbW,SA6CX4F,IA7CW,2EA6C1B,4BAAA7F,EAAA,yDAEe,QADP0F,EAAOI,OAAO,wQADtB,oBAGQJ,IAASlB,EAHjB,gCAIyBY,YAAW,CAC5BvE,IAAI,qCAAD,OAAuCmD,EAAMpE,cAA7C,qBAAuEyF,IAAKC,YAAYC,OALnG,OAO2B,YAP3B,OAOeQ,QACP7B,EAAQ8B,KAAK,iBAEbf,EACE,0BAAMgB,UAAWC,IAAaN,OAA9B,+IAXV,uBAeMC,IAfN,6CA7C0B,kEAiE1B,WAA4BM,GAA5B,iBAAAnG,EAAA,6DACEmG,EAAMC,iBAEAC,EAAW,IAAIC,UACjB,UAAAlC,EAASmC,QAAQC,aAAjB,eAAwBC,QAAS,GACnCJ,EAASK,OAAO,QAAStC,EAASmC,QAAQC,MAAM,IALpD,SAOqBpB,YAAW,CAC5BvE,IAAI,qCAAD,OAAuCmD,EAAMpE,cAA7C,iBAAmE4E,EAAnE,iBAA0FE,EAA1F,2BAAwHE,EAAxH,qBAAkJS,IAAKC,YAAYC,KACtKoB,OAAQ,CACNC,OAAQ,OACRC,KAAMR,KAXZ,OAeuB,YAfvB,OAeWN,QACPd,EACE,0BAAMgB,UAAWC,IAAaY,SAA9B,2GAGF7B,EACE,0BAAMgB,UAAWC,IAAaN,OAA9B,2JArBN,4CAjE0B,sBA2F1B,OAAIA,IACkB,aAAd,OAAJ3F,QAAI,IAAJA,OAAA,EAAAA,EAAM8F,SAEN,6BACE,6BACE,wGAEF,0BAAME,UAAWC,IAAaa,KAAMC,SAlGhB,6CAkGpB,iFAEE,2BACEpG,KAAK,OACLqG,YAAY,iFACZC,MAAO1C,EACP2C,SA5EV,YAAuC,IAAX7G,EAAU,EAAVA,OAC1BmE,EAAqBnE,EAAO4G,QA4EpBE,UAAU,IAPd,6FAUE,8BACExG,KAAK,OACLqG,YAAY,6FACZC,MAAOxC,EACPyC,SAhFV,YAA8C,IAAX7G,EAAU,EAAVA,OACjCqE,EAAkBrE,EAAO4G,QAgFjBE,UAAU,EACVC,KAAM,EACNC,UAAW,MAEb,8IACqB,IACnB,2BACE1G,KAAK,SACL2G,IAAK,EACLC,IAAK,GACLN,MAAOtC,EACPuC,SApGZ,YAAgD,IAAX7G,EAAU,EAAVA,OACnCuE,EAAoBvE,EAAO4G,UAoGhB,IACH,4BACEtG,KAAK,SACL6G,QAAS,kB,6CAAMC,CAAY1D,EAAMpE,cAAegF,KAEhD,kBAAC,IAAD,CAAiB+C,KAAMC,MAJzB,4CA5BJ,2EAoCE,yBACEC,IAAKvD,EACLwD,IAAKhD,EACLiD,IAAI,6FACJC,MAAO,CACLvF,OAAQ,IACRwF,UAAW,QACXC,OAAQ,oBACRC,aAAc,MAGlB,2BACEvH,KAAK,OACLuG,SA/GV,YAAwC,IAAX7G,EAAU,EAAVA,OACrB8H,EAAS,IAAIC,WACnBD,EAAOE,OAAS,YAAiB,IAAdhI,EAAa,EAAbA,OACjBgE,EAASiC,QAAQuB,IAAMxH,EAAOmF,QAGhC2C,EAAOG,cAAcjI,EAAOkG,MAAM,KA0G1BqB,IAAKzD,EACLoE,OAAO,YAET,0BAAMvC,UAAWC,IAAalB,QAASA,GACvC,2BAAOpE,KAAK,SAASsG,MAAM,uEAC3B,2BACEO,QAAS5B,EACTI,UAAWC,IAAauC,OACxB7H,KAAK,SACLsG,MAAM,yEAKT","file":"static/js/23.3f154cb0.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport apiFetcher from \"../../utils/apiFetcher\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useAsync } from \"react-async\";\nimport ManagerStyle from \"./Manager.module.css\";\nimport { Auth } from \"../../utils/firebase\";\nimport QRCode from \"qrcode\";\nimport { PDFDocument, rgb } from \"pdf-lib\";\nimport fontkit from \"@pdf-lib/fontkit\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQrcode } from \"@fortawesome/free-solid-svg-icons\";\nimport { PORT, PROTOCOL, SERVER_ADDRESS } from \"../../utils/config\";\n\nasync function QRCodePrint(restaurant_id, table_quantity) {\n  const pdf = await PDFDocument.create();\n  pdf.registerFontkit(fontkit);\n\n  const [kanitFont, background] = await Promise.all([\n    import(\"../../fonts/Kanit-Regular.ttf\").then(async ({ default: font }) =>\n      pdf.embedFont(await fetch(font).then((res) => res.arrayBuffer()))\n    ),\n    import(\"../../background.jpg\").then(async ({ default: image }) =>\n      pdf.embedJpg(await fetch(image).then((res) => res.arrayBuffer()))\n    ),\n  ]);\n\n  function downloadBlob(data, fileName, mimeType) {\n    let blob = new Blob([data], {\n      type: mimeType,\n    });\n    let url = window.URL.createObjectURL(blob);\n    downloadURL(url, fileName);\n    setTimeout(() => window.URL.revokeObjectURL(url), 1000);\n  }\n\n  function downloadURL(data, fileName) {\n    const a = document.createElement(\"a\");\n    a.href = data;\n    a.target = \"_blank\";\n    a.click();\n    a.remove();\n  }\n\n  for (let i = 1; i <= table_quantity; i++) {\n    const currentPage = pdf.addPage();\n    const { height, width } = currentPage.getSize();\n    const url = await QRCode.toDataURL(\n      `${PROTOCOL}://${SERVER_ADDRESS}:${PORT}/restaurant/auth/${restaurant_id}/${i}`,\n      {\n        width: width / 2,\n      }\n    );\n\n    const info = \"โต๊ะที่\" + i;\n    const infoSize = 50;\n    const infoWidth = kanitFont.widthOfTextAtSize(info, infoSize);\n\n    currentPage.drawImage(background, {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    });\n\n    currentPage.drawText(info, {\n      x: width / 2 - infoWidth / 2 - 10,\n      y: 45,\n      size: infoSize,\n      font: kanitFont,\n      color: rgb(1, 1, 1),\n    });\n\n    currentPage.moveTo(width / 2, height / 2);\n\n    const image = await pdf.embedPng(url);\n    const imageDim = image;\n\n    currentPage.drawImage(image, {\n      x: width / 2 - imageDim.width / 2,\n      y: height / 2 - imageDim.height / 2,\n      width: imageDim.width,\n      height: imageDim.height,\n    });\n  }\n\n  pdf\n    .save()\n    .then((savedPDF) =>\n      downloadBlob(savedPDF, \"qrcode.pdf\", \"application/pdf\")\n    );\n}\n\nfunction RestaurantManage() {\n  const param = useParams();\n  const history = useHistory();\n\n  const imageRef = useRef();\n  const coverRef = useRef();\n\n  const [restaurantName, restaurantNameUpdate] = useState(\"\");\n  const [description, descriptionUpdate] = useState(\"\");\n  const [tableQuantity, tableQuantityUpdate] = useState(0);\n  const [imageSrc, imageSrcUpdate] = useState(\"\");\n  const [status, setStatus] = useState();\n\n  const { error, data } = useAsync({\n    promiseFn: apiFetcher,\n    url: `/manager/restaurant/get.php?id=${param.restaurant_id}&user_uid=${Auth.currentUser.uid}`,\n    onResolve({ result }) {\n      restaurantNameUpdate(result.name);\n      descriptionUpdate(result.info);\n      tableQuantityUpdate(result.table_quantity);\n      imageSrcUpdate(result.img);\n    },\n  });\n\n  function handleTableQuantityChange({ target }) {\n    tableQuantityUpdate(target.value);\n  }\n\n  function handleNameChange({ target }) {\n    restaurantNameUpdate(target.value);\n  }\n\n  function handleDescriptionChange({ target }) {\n    descriptionUpdate(target.value);\n  }\n\n  function handleImageChange({ target }) {\n    const reader = new FileReader();\n    reader.onload = ({ target }) => {\n      coverRef.current.src = target.result;\n    };\n\n    reader.readAsDataURL(target.files[0]);\n  }\n\n  async function handleDelete() {\n    const name = prompt(\"ยืนยันการลบร้านอาหาร กรุณาพิมพ์ชื่อร้านอาหาร\");\n    if (name !== null) {\n      if (name === restaurantName) {\n        const json = await apiFetcher({\n          url: `/manager/restaurant/delete.php?id=${param.restaurant_id}&user_uid=${Auth.currentUser.uid}`,\n        });\n        if (json.message === \"success\") {\n          history.push(\"/manager/list\");\n        } else {\n          setStatus(\n            <span className={ManagerStyle.error}>มีปัญหาในการลบร้านอาหาร</span>\n          );\n        }\n      } else {\n        handleDelete();\n      }\n    }\n  }\n\n  async function handleUpdate(event) {\n    event.preventDefault();\n\n    const formData = new FormData();\n    if (imageRef.current.files?.length > 0)\n      formData.append(\"image\", imageRef.current.files[0]);\n\n    const json = await apiFetcher({\n      url: `/manager/restaurant/update.php?id=${param.restaurant_id}&name=${restaurantName}&info=${description}&table_quantity=${tableQuantity}&user_uid=${Auth.currentUser.uid}`,\n      option: {\n        method: \"POST\",\n        body: formData,\n      },\n    });\n\n    if (json.message === \"success\") {\n      setStatus(\n        <span className={ManagerStyle.success}>แก้ไขข้อมูลสำเร็จ</span>\n      );\n    } else {\n      setStatus(\n        <span className={ManagerStyle.error}>เกิดปัญหาในการแก้ไขข้อมูล</span>\n      );\n    }\n  }\n\n  if (error) return error;\n  if (data?.message === \"success\")\n    return (\n      <div>\n        <big>\n          <b>จัดการข้อมูล</b>\n        </big>\n        <form className={ManagerStyle.form} onSubmit={handleUpdate}>\n          ชื่อร้านอาหาร\n          <input\n            type=\"text\"\n            placeholder=\"ชื่อร้านอาหาร\"\n            value={restaurantName}\n            onChange={handleNameChange}\n            required={true}\n          />\n          คำอธิบายร้านค้า\n          <textarea\n            type=\"text\"\n            placeholder=\"คำอธิบายร้านค้า\"\n            value={description}\n            onChange={handleDescriptionChange}\n            required={true}\n            rows={4}\n            maxLength={150}\n          />\n          <label>\n            จำนวนโต๊ะภายในร้าน{\" \"}\n            <input\n              type=\"number\"\n              min={0}\n              max={99}\n              value={tableQuantity}\n              onChange={handleTableQuantityChange}\n            />{\" \"}\n            <button\n              type=\"button\"\n              onClick={() => QRCodePrint(param.restaurant_id, tableQuantity)}\n            >\n              <FontAwesomeIcon icon={faQrcode} /> ปริ้น QR Code\n            </button>\n          </label>\n          รูปร้านอาหาร\n          <img\n            ref={coverRef}\n            src={imageSrc}\n            alt=\"รูปภาพร้านอาหาร\"\n            style={{\n              height: 200,\n              objectFit: \"cover\",\n              border: \"1px solid #232323\",\n              marginBottom: 10,\n            }}\n          />\n          <input\n            type=\"file\"\n            onChange={handleImageChange}\n            ref={imageRef}\n            accept=\"image/*\"\n          />\n          <span className={ManagerStyle.status}>{status}</span>\n          <input type=\"submit\" value=\"แก้ไขข้อมูล\" />\n          <input\n            onClick={handleDelete}\n            className={ManagerStyle.danger}\n            type=\"button\"\n            value=\"ลบร้านอาหาร\"\n          />\n        </form>\n      </div>\n    );\n  return \"Loading\";\n}\n\nexport default RestaurantManage;\n"],"sourceRoot":""}