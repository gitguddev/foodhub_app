{"version":3,"sources":["route/restaurant/Home.js","../node_modules/numeral/numeral.js"],"names":["DashboardStyled","styled","div","RestaurantThumbnail","img","Title","span","Info","Detail","Slider","keyframes","SliderIPAD","FoodCatalogContainer","FoodCatalog","CatalogButton","button","RecommendLabel","CatalogLink","Link","FoodCatalogStyled","catalog","useAuthAPI","data","error","message","result","length","filter","index","map","key","id","src","alt","onTouchStart","Home","useState","Date","time","timeSet","TimePassed","year","month","day","hour","minute","second","thatTime","diff","getTime","seconds","Math","floor","minutes","hours","numeral","format","useEffect","timeState","setTimeout","clearTimeout","name","info","table","total","to","define","_","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","options","Numeral","input","number","this","_input","_value","value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","regexps","unformat","match","stringToNumber","Number","version","obj","numberToFormat","roundingFunction","leadingCount","abbrForce","abs","int","precision","signed","thousands","output","locale","negP","optDec","abbr","decimal","neg","includes","indexOf","RegExp","abbreviations","trillion","billion","million","thousand","toString","split","toFixed","delimiters","slice","String","i","string","abbreviation","stringOriginal","currency","symbol","pow","min","search","insert","subString","start","reduce","array","callback","TypeError","t","Object","len","k","arguments","multiplier","x","parts","correctionFactor","args","Array","prototype","call","accum","next","mn","maxDecimals","optionals","boundedPrecision","optionalsRegExp","power","splitValue","minDecimals","max","toLowerCase","localeData","Error","reset","property","register","type","validate","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","console","warn","trim","e","substr","fn","clone","inputString","formatFunction","round","set","add","corrFactor","curr","currI","O","subtract","multiply","divide","difference","ordinal","b","space","splice","join","base","suffixes","binary","unformatRegex","concat","item","bytes","suffix","bytesMultiplier","symbols","before","after","toExponential","timeArray"],"mappings":"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","file":"static/js/17.5e1559e0.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useAuthAPI } from \"../../utils/apiFetcher\";\nimport Loader from \"../../utils/Loader\";\nimport numeral from \"numeral\";\n//import { ReactComponent as Food } from \"./Popular Food.svg\";\n//import RestaurantStyle from \"./Restaurant.module.css\";\n\nconst DashboardStyled = styled.div`\n  background-color: #232323;\n  color: white;\n  font-size: calc(2vh + 6px);\n  margin-top: -10px;\n  height: calc(60% + 10px);\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n`;\n\nconst RestaurantThumbnail = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  position: absolute;\n  opacity: 0.1;\n`;\n\nconst Title = styled.span`\n  font-size: 1.5em;\n`;\nconst Info = styled.span`\n  font-size: 1em;\n`;\nconst Detail = styled.span`\n  font-size: 1em;\n`;\n\nconst Slider = keyframes`\n\t0% {\n\t\tleft: 0;\n\t}\n\t50% {\n\t\tleft: calc(100vw - 1040px);\n\t}\n\t100% {\n\t\tleft: 0;\n\t}\n`;\n\nconst SliderIPAD = keyframes`\n\t0% {\n\t\tleft: 0;\n\t}\n\t50% {\n\t\tleft: calc(100vw - 2000px);\n\t}\n\t100% {\n\t\tleft: 0;\n\t}\n`;\n\nconst FoodCatalogContainer = styled.div`\n  height: 40%;\n  position: relative;\n`;\n\nconst FoodCatalog = styled.div`\n  height: 100%;\n  display: flex;\n  position: absolute;\n  padding: 10px;\n  animation: ${Slider} 20s infinite;\n\n  &:hover {\n    animation-play-state: paused;\n  }\n\n  img {\n    margin: 10px;\n    height: calc(100% - 10px);\n    width: 150px;\n    border-radius: 3px;\n    object-fit: cover;\n    user-select: none;\n    z-index: 0;\n  }\n\n  @media only screen and (min-width: 1024px) {\n    animation: ${SliderIPAD} 20s infinite;\n    img {\n      width: 310px;\n    }\n  }\n`;\n\nconst CatalogButton = styled.button`\n  background-color: transparent;\n  color: white;\n  border: 2px solid white;\n  border-radius: 4px;\n  margin: 15px 0;\n  font-size: 1em;\n  padding: 6px;\n\n  z-index: 2;\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.1);\n    transition: all 0.3s;\n  }\n`;\n\nconst RecommendLabel = styled.div`\n  position: absolute;\n  bottom: 0;\n  transform: translateY(30%);\n  left: 20px;\n  border-radius: 3px;\n  padding: 3px 8px;\n  color: white;\n  background-color: #232323;\n  box-shadow: 0px 1px 2px 0px #000;\n  font-size: 0.8em;\n`;\n\nconst CatalogLink = styled(Link)`\n  position: relative;\n  z-index: 1;\n\n  & > button:hover {\n    cursor: pointer !important;\n  }\n`;\n\nfunction FoodCatalogStyled() {\n  const { data, error } = useAuthAPI(`/restaurant/food/list.php`);\n\n  if (error) return error;\n  if (data?.message === \"success\") {\n    let catalog;\n    if (data.result.length >= 6) {\n      catalog = data.result\n        .filter((filter, index) => index < 6)\n        .map((map) => <img key={map.id} src={map.img} alt=\"food\" />);\n    } else {\n      catalog = [\n        ...data.result\n          .filter((filter, index) => index < 6)\n          .map((map) => <img key={map.id} src={map.img} alt=\"food\" />),\n        ...data.result\n          .filter((filter, index) => index < 6 - data.result.length)\n          .map((map) => (\n            <img key={data.result.length + map.id} src={map.img} alt=\"food\" />\n          )),\n      ];\n    }\n    return <FoodCatalog onTouchStart={() => {}}>{catalog}</FoodCatalog>;\n  }\n  return <Loader />;\n}\n\nfunction Home() {\n  const { data, error } = useAuthAPI(`/restaurant/get.php`);\n  const [time, timeSet] = useState(new Date());\n\n  useEffect(() => {\n    const timeState = setTimeout(() => timeSet(new Date()), 1000);\n    return () => clearTimeout(timeState);\n  });\n\n  function TimePassed() {\n    const { year, month, day, hour, minute, second } = data.result;\n    let thatTime = new Date(year, month, day, hour, minute, second);\n    let thisTime = time;\n\n    let diff = thisTime.getTime() - thatTime.getTime();\n\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n\n    return (\n      <span>{`${hours}:${numeral(minutes - hours * 60).format(\"00\")}:${numeral(\n        seconds - minutes * 60\n      ).format(\"00\")}`}</span>\n    );\n  }\n\n  if (error) return error;\n  if (data?.message === \"success\")\n    return (\n      <>\n        <DashboardStyled>\n          <RestaurantThumbnail src={data.result.img} />\n          <Title>{data.result.name}</Title>\n          <Info>{data.result.info}</Info>\n          <br />\n          <Detail>เลขที่โต๊ะ {data.result.table}</Detail>\n          <Detail>\n            เวลาที่ใช้ <TimePassed />\n          </Detail>\n          <Detail>\n            รวมยอดสุทธิ {numeral(data.result.total).format(\"0,0.00\")} บาท\n          </Detail>\n          <CatalogLink to={`/restaurant/catalog`}>\n            <CatalogButton>ดูรายการอาหาร</CatalogButton>\n          </CatalogLink>\n          <RecommendLabel>แนะนำ</RecommendLabel>\n        </DashboardStyled>\n        <FoodCatalogContainer>\n          <FoodCatalogStyled />\n        </FoodCatalogContainer>\n      </>\n    );\n  return <Loader />;\n}\n\nexport default Home;\n","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(this, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n"],"sourceRoot":""}