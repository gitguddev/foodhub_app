{"version":3,"sources":["route/manager/Session.js","../node_modules/numeral/numeral.js"],"names":["SessionContainer","styled","div","infoBoxAnimation","keyframes","SessionBox","props","parseInt","status","BillStyled","BillButton","button","grey","Bill","sessionId","reloader","table_number","restaurant_id","useParams","useContext","Socket","socket","connected","useAsync","promiseFn","apiFetcher","url","Auth","currentUser","uid","data","error","reload","id","a","json","message","emit","console","completeBill","useEffect","on","off","result","length","eachItem","key","map","name","quantity","total","style","textAlign","display","justifyContent","onClick","cancelBill","marginTop","fontSize","width","ConfirmBT","danger","SessionTable","useState","Date","time","timeSet","clicked","clickedSet","TimePassed","year","month","day","hour","minute","second","thatTime","diff","getTime","seconds","Math","floor","minutes","hours","numeral","format","timer","setTimeout","clearTimeout","tableList","confirm","total_order","sessionsAccept","sessionsDelete","fontWeight","color","Session","cancel","isPending","setInterval","clearInterval","define","_","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","options","Numeral","input","number","this","_input","_value","value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","regexps","unformat","match","stringToNumber","Number","version","obj","numberToFormat","roundingFunction","leadingCount","abbrForce","abs","int","precision","signed","thousands","output","locale","negP","optDec","abbr","decimal","neg","includes","indexOf","RegExp","abbreviations","trillion","billion","million","thousand","toString","split","toFixed","delimiters","slice","String","i","string","abbreviation","stringOriginal","currency","symbol","pow","min","search","insert","subString","start","reduce","array","callback","TypeError","t","Object","len","k","arguments","multiplier","x","parts","correctionFactor","args","Array","prototype","call","accum","next","mn","maxDecimals","optionals","boundedPrecision","optionalsRegExp","power","splitValue","minDecimals","max","toLowerCase","localeData","Error","reset","property","register","type","validate","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","warn","trim","e","substr","fn","clone","inputString","formatFunction","round","set","add","corrFactor","curr","currI","O","subtract","multiply","divide","difference","ordinal","b","space","splice","join","base","suffixes","binary","unformatRegex","concat","filter","item","bytes","suffix","bytesMultiplier","symbols","before","after","toExponential","timeArray"],"mappings":"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","file":"static/js/14.e1311900.chunk.js","sourcesContent":["import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport { useAsync } from \"react-async\";\nimport apiFetcher from \"../../utils/apiFetcher\";\nimport { Auth } from \"../../utils/firebase\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"../../utils/Loader\";\nimport styled, { keyframes } from \"styled-components\";\nimport numeral from \"numeral\";\nimport { Socket } from \"./Manager\";\n\nconst SessionContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 15px;\n`;\n\nconst infoBoxAnimation = keyframes`\n  from {\n    height: 0vh;\n    opacity: 0;\n  }\n  to{ \n    height: 50vh;\n    opacity: 1;\n  }\n`;\n\nconst SessionBox = styled.div`\n  align-self: flex-start;\n  border: 2px solid\n    ${(props) => (parseInt(props.status) === 1 ? \"red\" : \"#232323\")};\n  padding: 25px 10px 10px 10px;\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  font-size: calc(3vh + 1px);\n  text-align: center;\n  /*box-shadow: 0 1px 4px 1px #999;*/\n  position: relative;\n  margin: 14px 0px;\n  font-size: 0.8em;\n\n  b {\n    box-shadow: 0 1px 2px 0px #999;\n    font-size: 1.1em;\n    position: absolute;\n    left: 15px;\n    top: -26px;\n    background-color: ${(props) =>\n      parseInt(props.status) === 1 ? \"red\" : \"#232323\"};\n    padding: 0px 20px;\n    color: white;\n    border-radius: 4px;\n    transition: all 0.4s;\n  }\n\n  &:hover {\n    transition: all 0.4s;\n    cursor: pointer;\n    user-select: none;\n  }\n\n  &:hover b {\n    left: 25px;\n    transition: all 0.4s;\n  }\n\n  @media only screen and (max-width: 800px) {\n    & {\n      padding: 10px;\n      font-size: 1em;\n    }\n  }\n\n  .infoBox {\n  }\n  .infoBox:hover {\n    cursor: default;\n  }\n`;\n\nconst BillStyled = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-auto-rows: min-content;\n  font-size: 0.8em;\n\n  margin-top: 10px;\n  animation: ${infoBoxAnimation} 1s;\n  width: 100%;\n  height: 50vh;\n  z-index: 1;\n\n  span:nth-child(1),\n  span:nth-child(2),\n  span:nth-child(3) {\n    text-align: center !important;\n    font-weight: bold;\n  }\n  overflow: auto;\n`;\n\nconst BillButton = styled.button`\n  margin-top: 10px;\n  padding: 5px;\n  background-color: ${(props) => (props.grey ? \"grey\" : \"green\")};\n  color: white;\n  font-weight: bold;\n  border: none;\n  border-radius: 3px;\n  width: ${(props) => (parseInt(props.status) === 1 ? \"48%\" : \"100%\")};\n\n  &:hover {\n    background-color: ${(props) => (props.grey ? \"#5c5c5c\" : \"#005200\")};\n    cursor: pointer;\n  }\n`;\n\nfunction Bill({ sessionId, reloader, status, table_number }) {\n  const { restaurant_id } = useParams();\n  const { socket, connected } = useContext(Socket);\n  const { data, error, reload } = useAsync({\n    promiseFn: apiFetcher,\n    url: `/manager/order/food_table.php?user_uid=${Auth.currentUser.uid}&restaurant_id=${restaurant_id}&session_id=${sessionId}`,\n  });\n\n  useEffect(() => {\n    socket.on(\"order\", reload);\n    socket.on(\"cancel\", reload);\n    socket.on(\"update\", reload);\n    return () => {\n      socket.off(\"order\");\n      socket.off(\"cancel\");\n      socket.off(\"update\");\n    };\n  }, [reload, restaurant_id, socket]);\n\n  async function cancelBill(id) {\n    const json = await apiFetcher({\n      url: `/manager/session/cancel.php?id=${id}&user_uid=${Auth.currentUser.uid}&restaurant_id=${restaurant_id}`,\n    });\n\n    if (json.message === \"success\") {\n      reloader();\n      socket.emit(\"cancelBill\", restaurant_id);\n    } else {\n      console.error(json.message);\n    }\n  }\n\n  async function completeBill(id) {\n    const json = await apiFetcher({\n      url: `/manager/session/complete.php?id=${id}&user_uid=${Auth.currentUser.uid}&restaurant_id=${restaurant_id}`,\n    });\n\n    if (json.message === \"success\") {\n      reloader();\n      socket.emit(\"completeBill\", restaurant_id, table_number);\n    } else {\n      console.error(json.message);\n    }\n  }\n\n  if (error) return error;\n  if (data?.message === \"success\") {\n    if (data.result?.length > 0) {\n      const eachItem = [\n        <Fragment key=\"head\">\n          <span>ชื่อ</span>\n          <span>จำนวน</span>\n          <span>รวม</span>\n        </Fragment>,\n        ...data.result.map((map) => {\n          const { name, quantity, total } = map;\n\n          return (\n            <Fragment key={name + quantity}>\n              <span style={{ textAlign: \"left\" }}>{name}</span>\n              <span>{quantity}</span>\n              <span>{total}</span>\n            </Fragment>\n          );\n        }),\n      ];\n\n      return (\n        <>\n          <BillStyled>{eachItem}</BillStyled>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            {parseInt(status) === 1 && (\n              <BillButton\n                status={status}\n                grey\n                onClick={() => cancelBill(sessionId)}\n              >\n                ยกเลิกคำขอชำระ\n              </BillButton>\n            )}\n            <BillButton status={status} onClick={() => completeBill(sessionId)}>\n              เสร็จสิ้น\n            </BillButton>\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <span style={{ marginTop: 15, fontSize: \"0.9em\" }}>\n          ไม่มีการสั่งอาหาร\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <BillButton\n              style={{ width: \"100%\" }}\n              onClick={() => completeBill(sessionId)}\n            >\n              เสร็จสิ้น\n            </BillButton>\n          </div>\n        </span>\n      );\n    }\n  }\n  return <Loader />;\n}\n\nconst ConfirmBT = styled.button`\n  border: none;\n  padding: 5px 10px;\n  border-radius: 3px;\n  color: white;\n  margin-top: 10px;\n\n  background-color: ${(props) => (props.danger ? \"red\" : \"blue\")};\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${(props) => (props.danger ? \"#940100\" : \"#00007b\")};\n    transition: all 0.2s;\n    cursor: pointer;\n  }\n`;\n\nfunction SessionTable({ data, reloader }) {\n  const [time, timeSet] = useState(new Date());\n  const [clicked, clickedSet] = useState(false);\n  const { restaurant_id } = useParams();\n\n  useEffect(() => {\n    const timer = setTimeout(() => timeSet(new Date()), 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [time]);\n\n  function TimePassed({ data }) {\n    const { year, month, day, hour, minute, second } = data;\n    let thatTime = new Date(year, month, day, hour, minute, second);\n    let thisTime = time;\n\n    let diff = thisTime.getTime() - thatTime.getTime();\n\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n\n    return (\n      <span>{`${hours}:${numeral(minutes - hours * 60).format(\"00\")}:${numeral(\n        seconds - minutes * 60\n      ).format(\"00\")}`}</span>\n    );\n  }\n\n  function handleClick(table_number) {\n    clickedSet(clicked === table_number ? null : table_number);\n  }\n\n  async function sessionsAccept(id) {\n    const json = await apiFetcher({\n      url: `/manager/session/operation.php?method=accept&id=${id}&restaurant_id=${restaurant_id}&user_uid=${Auth.currentUser.uid}`,\n    });\n\n    if (json?.message === \"success\") {\n      reloader();\n    } else {\n      console.error(json?.message);\n    }\n  }\n\n  async function sessionsDelete(id) {\n    const json = await apiFetcher({\n      url: `/manager/session/operation.php?method=delete&id=${id}&restaurant_id=${restaurant_id}&user_uid=${Auth.currentUser.uid}`,\n    });\n\n    if (json?.message === \"success\") {\n      reloader();\n    } else {\n      console.error(json?.message);\n    }\n  }\n\n  if (data === null) return <span>ไม่มีลูกค้าอยู่ในร้านขณะนี้</span>;\n\n  const tableList = data.map((map) => (\n    <SessionBox\n      key={map.id}\n      status={map.status}\n      onClick={\n        parseInt(map.confirm) === 1 ? () => handleClick(map.table_number) : null\n      }\n    >\n      <b>โต๊ะที่ {map.table_number}</b>\n      {parseInt(map.confirm) === 1 && (\n        <>\n          <span>จำนวนอาหารที่สั่ง {map.total_order}</span>\n          <span>รวมสุทธิ {numeral(map.total || 0).format(\"0,0.00\")}</span>\n          <span>\n            ระยะเวลา <TimePassed data={map} />\n          </span>\n        </>\n      )}\n      {parseInt(map.confirm) === 0 ? (\n        <>\n          <span>กำลังรอการยืนยัน</span>\n          <ConfirmBT onClick={() => sessionsAccept(map.id)}>ยืนยัน</ConfirmBT>\n          <ConfirmBT onClick={() => sessionsDelete(map.id)} danger>\n            ยกเลิก\n          </ConfirmBT>\n        </>\n      ) : (\n        parseInt(map.status) === 1 && (\n          <span\n            style={{\n              fontSize: \"1.2em\",\n              marginTop: 15,\n              fontWeight: \"bold\",\n              color: \"red\",\n            }}\n          >\n            มีคำเรียกขอเก็บเงิน\n          </span>\n        )\n      )}\n      {clicked === map.table_number && (\n        <Bill\n          sessionId={map.id}\n          reloader={reloader}\n          status={map.status}\n          table_number={map.table_number}\n        />\n      )}\n    </SessionBox>\n  ));\n\n  return <SessionContainer>{tableList}</SessionContainer>;\n}\n\nfunction Session() {\n  const { restaurant_id } = useParams();\n  const { data, error, reload, cancel, isPending } = useAsync({\n    promiseFn: apiFetcher,\n    url: `/manager/session/get.php?restaurant_id=${restaurant_id}&user_uid=${Auth.currentUser.uid}`,\n  });\n\n  const { socket, connected } = useContext(Socket);\n\n  function Fetcher() {\n    const timer = setInterval(reload, 1000);\n    socket.on(\"checkBillPage\", () => {\n      if (isPending) cancel();\n      reload();\n    });\n    socket.on(\"order\", reload);\n    socket.on(\"cancel\", reload);\n    socket.on(\"update\", reload);\n    return () => {\n      clearInterval(timer);\n      socket.off(\"checkBillPage\");\n      cancel();\n    };\n  }\n\n  useEffect(Fetcher, [restaurant_id, reload, socket, cancel, data]);\n\n  if (error) return error;\n  if (data?.message === \"success\" && connected)\n    return <SessionTable data={data.result} reloader={reload} />;\n  return <Loader />;\n}\n\nexport default Session;\n","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(this, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n"],"sourceRoot":""}